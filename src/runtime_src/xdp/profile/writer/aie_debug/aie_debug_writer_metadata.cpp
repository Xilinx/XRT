
// #######################################################################
// Copyright (c) 2024 AMD, Inc.  All rights reserved.
//
// This   document  contains  proprietary information  which   is
// protected by  copyright. All rights  are reserved. No  part of
// this  document may be photocopied, reproduced or translated to
// another  program  language  without  prior written  consent of
// XILINX Inc., San Jose, CA. 95124
//
// Xilinx, Inc.
// XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
// COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
/// ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
// STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
// IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
// FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION.
// XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
// THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
// ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
// FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
// AND FITNESS FOR A PARTICULAR PURPOSE.
//
// ######################################################################

#include "xdp/profile/writer/aie_debug/aie_debug_writer_metadata.h"

namespace xdp {

/*************************************************************************************
 * AIE1 Registers
 *************************************************************************************/
void AIE1WriterUsedRegisters::populateRegDataMap() {
   (regDataMap["cm_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   // (regDataMap["cm_core_amh0_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh0_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh0_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh1_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh1_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh1_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh2_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh2_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh2_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh3_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh3_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amh3_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml0_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml0_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml0_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml1_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml1_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml1_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml2_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml2_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml2_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml3_part1"]).push_back(RegData("Bits127_0", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml3_part2"]).push_back(RegData("Bits255_128", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_aml3_part3"]).push_back(RegData("Bits383_256", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_cb0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cb1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cb2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cb3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cb4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cb5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cb6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cb7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_ch0"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_ch1"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_ch2"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_ch3"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_ch4"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_ch5"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_ch6"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_ch7"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl0"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl1"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl2"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl3"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl4"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl5"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl6"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cl7"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_cs0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cs1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cs2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cs3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cs4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cs5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cs6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_cs7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_control"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_control"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["cm_core_fc"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_lc"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_le"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_lr"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_ls"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_mc0"]).push_back(RegData("Carry", "0", 0, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("SS0_tlast", "1", 1, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("UPS_sat", "10", 10, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("reserved", "15:11", 11, 31));
   (regDataMap["cm_core_mc0"]).push_back(RegData("SS1_tlast", "2", 2, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("Floating_Add_exceptions", "23:16", 16, 255));
   (regDataMap["cm_core_mc0"]).push_back(RegData("WSS0_tlast", "3", 3, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("Floating_Mul_exceptions", "31:24", 24, 255));
   (regDataMap["cm_core_mc0"]).push_back(RegData("WSS1_tlast", "4", 4, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("SS0_nb_sc", "5", 5, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("SS1_nb_sc", "6", 6, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("MS0_nb_sc", "7", 7, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("MS1_nb_sc", "8", 8, 1));
   (regDataMap["cm_core_mc0"]).push_back(RegData("SRS_sat", "9", 9, 1));
   (regDataMap["cm_core_mc1"]).push_back(RegData("Fx2fl_Cnv_exceptions", "15:8", 8, 255));
   (regDataMap["cm_core_mc1"]).push_back(RegData("Fl2Fx_Cnv_exceptions", "23:16", 16, 255));
   (regDataMap["cm_core_mc1"]).push_back(RegData("reserved", "31:24", 24, 255));
   (regDataMap["cm_core_mc1"]).push_back(RegData("Nlf_exceptions", "7:0", 0, 255));
   (regDataMap["cm_core_md0"]).push_back(RegData("Saturation_Select", "0", 0, 1));
   (regDataMap["cm_core_md0"]).push_back(RegData("mdMS", "11:10", 10, 3));
   (regDataMap["cm_core_md0"]).push_back(RegData("reserved", "15:12", 12, 15));
   (regDataMap["cm_core_md0"]).push_back(RegData("Floating_Add_Mask", "23:16", 16, 255));
   (regDataMap["cm_core_md0"]).push_back(RegData("Floating_Mul_Mask", "31:24", 24, 255));
   (regDataMap["cm_core_md0"]).push_back(RegData("Round_Mode_Select", "3:1", 1, 7));
   (regDataMap["cm_core_md0"]).push_back(RegData("Radix_select", "6:4", 4, 7));
   (regDataMap["cm_core_md0"]).push_back(RegData("Symmetric_Saturation_Select", "7", 7, 1));
   (regDataMap["cm_core_md0"]).push_back(RegData("mdSS", "9:8", 8, 3));
   (regDataMap["cm_core_md1"]).push_back(RegData("Floating_Fixed_to_Float_Mask", "15:8", 8, 255));
   (regDataMap["cm_core_md1"]).push_back(RegData("Floating_Float_to_Fixed_Mask", "23:16", 16, 255));
   (regDataMap["cm_core_md1"]).push_back(RegData("reserved", "31:24", 24, 255));
   (regDataMap["cm_core_md1"]).push_back(RegData("Floating_Non_Linear_Mask", "7:0", 0, 255));
   (regDataMap["cm_core_p0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_pc"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_r0"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r1"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r10"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r11"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r12"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r13"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r14"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r15"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r2"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r3"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r4"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r5"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r6"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r7"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r8"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r9"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_s0"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_s1"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_s2"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_s3"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_s4"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_s5"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_s6"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_s7"]).push_back(RegData("Register_Value", "7:0", 0, 255));
   (regDataMap["cm_core_sp"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_status"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_SS0", "10", 10, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_SS1", "11", 11, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_MS0", "12", 12, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_MS1", "13", 13, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Cascade_Stall_SCD", "14", 14, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Cascade_Stall_MCD", "15", 15, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Debug_Halt", "16", 16, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("ECC_Error_Stall", "17", 17, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("ECC_Scrubbing_Stall", "18", 18, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Error_Halt", "19", 19, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_S", "2", 2, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("reserved", "20", 20, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_W", "3", 3, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_N", "4", 4, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_E", "5", 5, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_S", "6", 6, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_W", "7", 7, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_N", "8", 8, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_E", "9", 9, 1));
   // (regDataMap["cm_core_vch0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vch1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vcl0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vcl1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vdh0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vdh1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vdl0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vdl1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrh0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrh1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrh2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrh3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrl0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrl1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrl2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_vrl3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_debug_control0"]).push_back(RegData("Debug_Halt_Bit", "0", 0, 1));
   (regDataMap["cm_debug_control0"]).push_back(RegData("Single_Step_Count", "5:2", 2, 15));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_SingleStep_Core_Event", "14:8", 8, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Halt_Core_Event0", "22:16", 16, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Halt_Core_Event1", "30:24", 24, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Resume_Core_Event", "6:0", 0, 127));
   (regDataMap["cm_debug_control2"]).push_back(RegData("PC_Event_Halt", "0", 0, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Memory_Stall_Halt", "1", 1, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Lock_Stall_Halt", "2", 2, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Stream_Stall_Halt", "3", 3, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_halted", "0", 0, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("PC_Event_halted", "1", 1, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Memory_Stall_Halted", "2", 2, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Lock_Stall_Halted", "3", 3, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Stream_stall_Halted", "4", 4, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_Event0_Halted", "5", 5, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_Event1_Halted", "6", 6, 1));
   (regDataMap["cm_ecc_control"]).push_back(RegData("Stall_Core_Control", "0", 0, 1));
   (regDataMap["cm_ecc_control"]).push_back(RegData("Unstall_Core", "1", 1, 1));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "13:0", 0, 16383));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("Access_Type", "14", 14, 1));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("Clear_failing_address", "15", 15, 1));
   (regDataMap["cm_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_number", "6:0", 0, 127));
   (regDataMap["cm_enable_events"]).push_back(RegData("Disable_Event", "14:8", 8, 127));
   (regDataMap["cm_enable_events"]).push_back(RegData("Disable_Event_occurred", "15", 15, 1));
   (regDataMap["cm_enable_events"]).push_back(RegData("Enable_Event", "6:0", 0, 127));
   (regDataMap["cm_enable_events"]).push_back(RegData("Enable_Event_occurred", "7", 7, 1));
   (regDataMap["cm_error_halt_control"]).push_back(RegData("Error_Halt", "0", 0, 1));
   (regDataMap["cm_error_halt_event"]).push_back(RegData("Error_Halt_Core_Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast0"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast1"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast10"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast11"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast12"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast13"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast14"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast15"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast2"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast3"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast4"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast5"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast6"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast7"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast8"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast9"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt0", "2", 2, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt1", "3", 3, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt2", "4", 4, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt3", "5", 5, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "6", 6, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "7", 7, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "8", 8, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "9", 9, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_0", "0", 0, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_1", "1", 1, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_10", "10", 10, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_11", "11", 11, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_12", "12", 12, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_13", "13", 13, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_14", "14", 14, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_15", "15", 15, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_2", "2", 2, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_3", "3", 3, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_4", "4", 4, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_5", "5", 5, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_6", "6", 6, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_7", "7", 7, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_8", "8", 8, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_9", "9", 9, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Event_0", "0", 0, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Event_1", "1", 1, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Cascade_Put", "10", 10, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Lock_Acquire_req", "11", 11, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Lock_Release_req", "12", 12, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Call", "2", 2, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Return", "3", 3, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Vector", "4", 4, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Load", "5", 5, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Store", "6", 6, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Stream_Get", "7", 7, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Stream_Put", "8", 8, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Cascade_Get", "9", 9, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Memory_Stall", "0", 0, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Stream_Stall", "1", 1, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Cascade_Stall", "2", 2, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Lock_Stall", "3", 3, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Debug", "4", 4, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Active", "5", 5, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Disable", "6", 6, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("ECC_Scrubbing_Stall", "7", 7, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("ECC_Error_Stall", "8", 8, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("SRS_Saturate", "0", 0, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("UPS_Saturate", "1", 1, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("AXI_MM_Slave_Error", "10", 10, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instruction_Decompression_Error", "11", 11, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("DM_address_out_of_range", "12", 12, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_Scrub_Corrected", "13", 13, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_Scrub_2bit", "14", 14, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_1bit", "15", 15, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_2bit", "16", 16, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_address_out_of_range", "17", 17, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("DM_access_to_Unavailable", "18", 18, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Lock_Access_to_Unavailable", "19", 19, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Overflow", "2", 2, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instr_Warning", "20", 20, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instr_Error", "21", 21, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Underflow", "3", 3, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Invalid", "4", 4, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Div_by_Zero", "5", 5, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("TLAST_in_WSS_words_0_2", "6", 6, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_Reg_Access_Failure", "7", 7, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "8", 8, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Control_Pkt_Error", "9", 9, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("SRS_Saturate", "0", 0, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("UPS_Saturate", "1", 1, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("AXI_MM_Slave_Error", "10", 10, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instruction_Decompression_Error", "11", 11, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("DM_address_out_of_range", "12", 12, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_Scrub_Corrected", "13", 13, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_Scrub_2bit", "14", 14, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_1bit", "15", 15, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_2bit", "16", 16, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_address_out_of_range", "17", 17, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("DM_access_to_Unavailable", "18", 18, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Lock_Access_to_Unavailable", "19", 19, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Overflow", "2", 2, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instr_Warning", "20", 20, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instr_Error", "21", 21, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Underflow", "3", 3, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Invalid", "4", 4, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Div_by_Zero", "5", 5, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("TLAST_in_WSS_words_0_2", "6", 6, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_Reg_Access_Failure", "7", 7, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "8", 8, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Control_Pkt_Error", "9", 9, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_0", "0", 0, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_1", "1", 1, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_2", "2", 2, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_3", "3", 3, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_Range_0_1", "4", 4, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_Range_2_3", "5", 5, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_2", "2", 2, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_3", "3", 3, 1));
   (regDataMap["cm_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_pc_event0"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event1"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event2"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event2"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event3"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event3"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter0_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter1"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter1_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter2"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter2_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter3"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter3_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_ctrl0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_ctrl0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_ctrl0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_ctrl0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_ctrl1"]).push_back(RegData("Cnt2_Stop_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_ctrl1"]).push_back(RegData("Cnt3_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_ctrl1"]).push_back(RegData("Cnt3_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_ctrl1"]).push_back(RegData("Cnt2_Start_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_ctrl2"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_ctrl2"]).push_back(RegData("Cnt2_Reset_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_ctrl2"]).push_back(RegData("Cnt3_Reset_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_ctrl2"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   // (regDataMap["cm_program_memory"]).push_back(RegData("nan", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_program_memory_error_injection"]).push_back(RegData("nan", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_reserved0"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["cm_reserved1"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["cm_reserved2"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["cm_reserved3"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["cm_reset_event"]).push_back(RegData("Reset_Event", "6:0", 0, 127));
   (regDataMap["cm_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_fifo1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_fifo1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_fifo1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_fifo1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_me_core0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_me_core0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_me_core0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_me_core0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_me_core1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_me_core1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_me_core1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_me_core1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_east_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_east_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_east_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_east_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_fifo_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_me_core0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_me_core0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_me_core1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_me_core1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_core1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_core1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_core1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_core1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_trace_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_me_trace_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_me_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_me_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_me_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_me_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_me_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_north_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_north_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_north_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_north_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_south_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_south_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_south_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_south_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_south_4_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_south_5_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_west_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_west_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_west_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_west_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_tile_clock_control"]).push_back(RegData("Clock_Buffer_Enable", "0", 0, 1));
   (regDataMap["cm_tile_clock_control"]).push_back(RegData("Next_Tile_Clock_Enable", "1", 1, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("First_Header_Parity_Error", "0", 0, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("Second_Header_Parity_Error", "1", 1, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("Tlast_Error", "3", 3, 1));
   (regDataMap["cm_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["cm_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["cm_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Mode", "1:0", 0, 3));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["cm_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["cm_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["cm_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock0_State", "0", 0, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock0_Value", "1", 1, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock5_State", "10", 10, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock5_Value", "11", 11, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock6_State", "12", 12, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock6_Value", "13", 13, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock7_State", "14", 14, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock7_Value", "15", 15, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock8_State", "16", 16, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock8_Value", "17", 17, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock9_State", "18", 18, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock9_Value", "19", 19, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock1_State", "2", 2, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock10_State", "20", 20, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock10_Value", "21", 21, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock11_State", "22", 22, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock11_Value", "23", 23, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock12_State", "24", 24, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock12_Value", "25", 25, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock13_State", "26", 26, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock13_Value", "27", 27, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock14_State", "28", 28, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock14_Value", "29", 29, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock1_Value", "3", 3, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock15_State", "30", 30, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock15_Value", "31", 31, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock2_State", "4", 4, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock2_Value", "5", 5, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock3_State", "6", 6, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock3_Value", "7", 7, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock4_State", "8", 8, 1));
   (regDataMap["mm_all_lock_state_value"]).push_back(RegData("Lock4_Value", "9", 9, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane0", "0", 0, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane1", "1", 1, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane2", "2", 2, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane3", "3", 3, 1));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   (regDataMap["mm_dma_bd0_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd0_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd0_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd0_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd0_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd0_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd0_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd0_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd0_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd0_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd10_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd10_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd10_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd10_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd10_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd10_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd10_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd10_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd10_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd10_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd11_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd11_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd11_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd11_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd11_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd11_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd11_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd11_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd11_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd11_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd12_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd12_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd12_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd12_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd12_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd12_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd12_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd12_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd12_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd12_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd13_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd13_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd13_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd13_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd13_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd13_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd13_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd13_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd13_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd13_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd14_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd14_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd14_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd14_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd14_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd14_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd14_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd14_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd14_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd14_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd15_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd15_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd15_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd15_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd15_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd15_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd15_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd15_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd15_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd15_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd1_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd1_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd1_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd1_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd1_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd1_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd1_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd1_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd1_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd1_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd2_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd2_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd2_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd2_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd2_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd2_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd2_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd2_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd2_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd2_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd3_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd3_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd3_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd3_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd3_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd3_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd3_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd3_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd3_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd3_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd4_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd4_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd4_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd4_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd4_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd4_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd4_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd4_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd4_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd4_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd5_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd5_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd5_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd5_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd5_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd5_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd5_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd5_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd5_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd5_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd6_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd6_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd6_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd6_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd6_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd6_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd6_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd6_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd6_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd6_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd7_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd7_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd7_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd7_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd7_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd7_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd7_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd7_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd7_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd7_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd8_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd8_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd8_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd8_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd8_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd8_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd8_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd8_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd8_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd8_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_bd9_2d_x"]).push_back(RegData("X_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_2d_x"]).push_back(RegData("X_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd9_2d_x"]).push_back(RegData("X_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd9_2d_y"]).push_back(RegData("Y_Offset", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_2d_y"]).push_back(RegData("Y_Wrap", "23:16", 16, 255));
   (regDataMap["mm_dma_bd9_2d_y"]).push_back(RegData("Y_Increment", "31:24", 24, 255));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Base_Address_A", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Use_Acquire_Value_A", "16", 16, 1));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Acquire_Value_A", "17", 17, 1));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Use_Release_Value_A", "19", 19, 1));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Release_Value_A", "20", 20, 1));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd9_addr_a"]).push_back(RegData("Lock_ID_A", "25:22", 22, 15));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Base_Address_B", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Use_Acquire_Value_B", "16", 16, 1));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Acquire_Value_B", "17", 17, 1));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Enable_Acquire", "18", 18, 1));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Use_Release_Value_B", "19", 19, 1));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Release_Value_B", "20", 20, 1));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Enable_Release", "21", 21, 1));
   (regDataMap["mm_dma_bd9_addr_b"]).push_back(RegData("Lock_ID_B", "25:22", 22, 15));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Length", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Next_BD", "16:13", 13, 15));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Use_Next_BD", "17", 17, 1));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Interleaved_Count", "25:18", 18, 255));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Enabled_Interleaved", "26", 26, 1));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Enable_Packet", "27", 27, 1));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Enable_FIFO_Mode", "29:28", 28, 3));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Enable_AB_Mode", "30", 30, 1));
   (regDataMap["mm_dma_bd9_control"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mm_dma_bd9_interleaved_state"]).push_back(RegData("Current_Pointer", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_interleaved_state"]).push_back(RegData("A_B", "16", 16, 1));
   (regDataMap["mm_dma_bd9_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_dma_bd9_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_dma_fifo_counter"]).push_back(RegData("Counter0", "12:0", 0, 8191));
   (regDataMap["mm_dma_fifo_counter"]).push_back(RegData("Counter1", "28:16", 16, 8191));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_mm2s_0_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_mm2s_1_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Start_Queue_Size_1", "11:9", 9, 7));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Cur_BD_0", "19:16", 16, 15));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Stat0", "1:0", 0, 3));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Cur_BD_1", "23:20", 20, 15));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Start_Queue_Overflow_0", "28", 28, 1));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Start_Queue_Overflow_1", "29", 29, 1));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Stat1", "3:2", 2, 3));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Lock_stalled0", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Lock_stalled1", "5", 5, 1));
   (regDataMap["mm_dma_mm2s_status"]).push_back(RegData("Start_Queue_Size_0", "8:6", 6, 7));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_s2mm_0_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_s2mm_1_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Start_Queue_Size_1", "11:9", 9, 7));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Cur_BD_0", "19:16", 16, 15));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Stat0", "1:0", 0, 3));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Cur_BD_1", "23:20", 20, 15));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Start_Queue_Overflow_0", "28", 28, 1));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Start_Queue_Overflow_1", "29", 29, 1));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Stat1", "3:2", 2, 3));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Lock_stalled0", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Lock_stalled1", "5", 5, 1));
   (regDataMap["mm_dma_s2mm_status"]).push_back(RegData("Start_Queue_Size_0", "8:6", 6, 7));
   (regDataMap["mm_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "13:0", 0, 16383));
   (regDataMap["mm_ecc_failing_address"]).push_back(RegData("Valid", "15", 15, 1));
   (regDataMap["mm_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_number", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast0"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast1"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast10"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast11"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast12"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast13"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast14"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast15"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast2"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast3"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast4"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast5"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast6"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast7"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast8"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast9"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Perf_Cnt0_Event", "2", 2, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Perf_Cnt1_Event", "3", 3, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "4", 4, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "5", 5, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "6", 6, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "7", 7, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_0", "0", 0, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_1", "1", 1, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_10", "10", 10, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_11", "11", 11, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_12", "12", 12, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_13", "13", 13, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_14", "14", 14, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_15", "15", 15, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_2", "2", 2, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_3", "3", 3, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_4", "4", 4, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_5", "5", 5, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_6", "6", 6, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_7", "7", 7, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_8", "8", 8, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_9", "9", 9, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_start_BD", "0", 0, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_start_BD", "1", 1, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_go_to_idle", "10", 10, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_go_to_idle", "11", 11, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_memory_conflict", "16", 16, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_memory_conflict", "17", 17, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_memory_conflict", "18", 18, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_memory_conflict", "19", 19, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_start_BD", "2", 2, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_start_BD", "3", 3, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_finished_BD", "4", 4, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_finished_BD", "5", 5, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_finished_BD", "6", 6, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_finished_BD", "7", 7, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_go_to_idle", "8", 8, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_go_to_idle", "9", 9, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_Corrected", "0", 0, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_2bit", "1", 1, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_S2MM_0_Error", "10", 10, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_S2MM_1_Error", "11", 11, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_MM2S_0_Error", "12", 12, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_MM2S_1_Error", "13", 13, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_1bit", "2", 2, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_2bit", "3", 3, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_2", "4", 4, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_3", "5", 5, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_4", "6", 6, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_5", "7", 7, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_6", "8", 8, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_7", "9", 9, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_0_Acquired", "0", 0, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_0_Release", "1", 1, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_5_Acquired", "10", 10, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_5_Release", "11", 11, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_6_Acquired", "12", 12, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_6_Release", "13", 13, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_7_Acquired", "14", 14, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_7_Release", "15", 15, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_8_Acquired", "16", 16, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_8_Release", "17", 17, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_9_Acquired", "18", 18, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_9_Release", "19", 19, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_1_Acquired", "2", 2, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_10_Acquired", "20", 20, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_10_Release", "21", 21, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_11_Acquired", "22", 22, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_11_Release", "23", 23, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_12_Acquired", "24", 24, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_12_Release", "25", 25, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_13_Acquired", "26", 26, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_13_Release", "27", 27, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_14_Acquired", "28", 28, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_14_Release", "29", 29, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_1_Release", "3", 3, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_15_Acquired", "30", 30, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_15_Release", "31", 31, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_2_Acquired", "4", 4, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_2_Release", "5", 5, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_3_Acquired", "6", 6, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_3_Release", "7", 7, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_4_Acquired", "8", 8, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_4_Release", "9", 9, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_0", "0", 0, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_1", "1", 1, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_2", "2", 2, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_3", "3", 3, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_4", "4", 4, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_5", "5", 5, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_6", "6", 6, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_7", "7", 7, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_2", "2", 2, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_3", "3", 3, 1));
   (regDataMap["mm_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_0", "0", 0, 1));
   (regDataMap["mm_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_1", "1", 1, 1));
   (regDataMap["mm_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_lock0_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock0_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock0_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock0_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock0_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock0_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock10_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock10_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock10_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock10_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock10_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock10_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock11_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock11_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock11_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock11_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock11_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock11_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock12_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock12_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock12_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock12_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock12_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock12_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock13_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock13_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock13_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock13_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock13_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock13_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock14_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock14_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock14_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock14_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock14_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock14_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock15_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock15_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock15_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock15_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock15_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock15_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock1_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock1_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock1_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock1_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock1_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock1_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock2_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock2_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock2_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock2_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock2_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock2_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock3_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock3_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock3_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock3_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock3_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock3_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock4_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock4_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock4_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock4_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock4_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock4_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock5_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock5_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock5_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock5_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock5_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock5_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock6_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock6_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock6_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock6_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock6_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock6_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock7_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock7_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock7_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock7_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock7_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock7_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock8_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock8_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock8_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock8_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock8_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock8_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock9_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock9_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock9_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["mm_lock9_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock9_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock9_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_2_Release", "11:10", 10, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_3_Acquired", "13:12", 12, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_3_Release", "15:14", 14, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_4_Acquired", "17:16", 16, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_4_Release", "19:18", 18, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_0_Acquired", "1:0", 0, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_5_Acquired", "21:20", 20, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_5_Release", "23:22", 22, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_6_Acquired", "25:24", 24, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_6_Release", "27:26", 26, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_7_Acquired", "29:28", 28, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_7_Release", "31:30", 30, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_0_Release", "3:2", 2, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_1_Acquired", "5:4", 4, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_1_Release", "7:6", 6, 3));
   (regDataMap["mm_lock_event_value_control_0"]).push_back(RegData("Lock_2_Acquired", "9:8", 8, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_10_Release", "11:10", 10, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_11_Acquired", "13:12", 12, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_11_Release", "15:14", 14, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_12_Acquired", "17:16", 16, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_12_Release", "19:18", 18, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_8_Acquired", "1:0", 0, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_13_Acquired", "21:20", 20, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_13_Release", "23:22", 22, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_14_Acquired", "25:24", 24, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_14_Release", "27:26", 26, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_15_Acquired", "29:28", 28, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_15_Release", "31:30", 30, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_8_Release", "3:2", 2, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_9_Acquired", "5:4", 4, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_9_Release", "7:6", 6, 3));
   (regDataMap["mm_lock_event_value_control_1"]).push_back(RegData("Lock_10_Acquired", "9:8", 8, 3));
   (regDataMap["mm_parity_failing_address"]).push_back(RegData("Parity_Error_Detection_Address", "14:0", 0, 32767));
   (regDataMap["mm_parity_failing_address"]).push_back(RegData("Valid", "15", 15, 1));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_control1"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control1"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter0_event_value"]).push_back(RegData("Counter0_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter1"]).push_back(RegData("Counter1_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter1_event_value"]).push_back(RegData("Counter1_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved0"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved1"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved2"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved3"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_reset_control"]).push_back(RegData("DMA_reset", "0", 0, 1));
   (regDataMap["mm_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["mm_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["mm_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["mm_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["mm_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["mm_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["mm_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["mm_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["mm_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Address", "14:4", 4, 2047));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("South_Access", "24", 24, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("West_Access", "25", 25, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("North_Access", "26", 26, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("East_Access", "27", 27, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("DMA_Access", "28", 28, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("AXI_Access", "29", 29, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Write_Access", "30", 30, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Read_Access", "31", 31, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Address", "14:4", 4, 2047));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("South_Access", "24", 24, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("West_Access", "25", 25, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("North_Access", "26", 26, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("East_Access", "27", 27, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("DMA_Access", "28", 28, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("AXI_Access", "29", 29, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Write_Access", "30", 30, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Read_Access", "31", 31, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock0_State", "0", 0, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock0_Value", "1", 1, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock5_State", "10", 10, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock5_Value", "11", 11, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock6_State", "12", 12, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock6_Value", "13", 13, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock7_State", "14", 14, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock7_Value", "15", 15, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock8_State", "16", 16, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock8_Value", "17", 17, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock9_State", "18", 18, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock9_Value", "19", 19, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock1_State", "2", 2, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock10_State", "20", 20, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock10_Value", "21", 21, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock11_State", "22", 22, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock11_Value", "23", 23, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock12_State", "24", 24, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock12_Value", "25", 25, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock13_State", "26", 26, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock13_Value", "27", 27, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock14_State", "28", 28, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock14_Value", "29", 29, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock1_Value", "3", 3, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock15_State", "30", 30, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock15_Value", "31", 31, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock2_State", "4", 4, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock2_Value", "5", 5, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock3_State", "6", 6, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock3_Value", "7", 7, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock4_State", "8", 8, 1));
   (regDataMap["shim_all_lock_state_value"]).push_back(RegData("Lock4_Value", "9", 9, 1));
   (regDataMap["shim_bisr_cache_ctrl"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["shim_bisr_cache_ctrl"]).push_back(RegData("Clear", "4", 4, 1));
   (regDataMap["shim_bisr_cache_data0"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data1"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data2"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data3"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_status"]).push_back(RegData("Done", "0", 0, 1));
   (regDataMap["shim_bisr_cache_status"]).push_back(RegData("Pass", "1", 1, 1));
   (regDataMap["shim_bisr_test_data0"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data1"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data2"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data3"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("Control_Pkt_Error", "0", 0, 1));
   (regDataMap["shim_dma_bd0_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd0_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd0_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd0_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd0_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd0_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd0_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd0_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd0_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd0_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd0_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd10_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd10_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd10_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd10_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd10_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd10_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd10_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd10_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd10_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd10_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd10_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd11_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd11_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd11_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd11_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd11_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd11_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd11_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd11_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd11_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd11_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd11_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd12_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd12_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd12_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd12_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd12_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd12_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd12_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd12_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd12_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd12_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd12_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd13_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd13_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd13_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd13_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd13_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd13_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd13_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd13_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd13_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd13_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd13_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd14_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd14_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd14_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd14_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd14_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd14_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd14_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd14_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd14_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd14_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd14_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd15_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd15_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd15_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd15_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd15_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd15_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd15_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd15_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd15_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd15_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd15_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd1_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd1_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd1_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd1_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd1_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd1_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd1_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd1_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd1_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd1_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd1_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd2_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd2_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd2_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd2_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd2_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd2_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd2_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd2_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd2_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd2_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd2_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd3_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd3_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd3_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd3_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd3_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd3_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd3_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd3_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd3_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd3_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd3_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd4_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd4_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd4_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd4_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd4_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd4_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd4_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd4_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd4_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd4_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd4_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd5_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd5_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd5_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd5_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd5_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd5_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd5_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd5_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd5_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd5_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd5_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd6_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd6_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd6_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd6_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd6_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd6_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd6_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd6_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd6_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd6_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd6_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd7_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd7_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd7_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd7_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd7_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd7_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd7_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd7_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd7_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd7_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd7_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd8_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd8_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd8_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd8_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd8_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd8_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd8_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd8_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd8_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd8_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd8_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_bd9_axi_config"]).push_back(RegData("Burst_Length", "10:9", 9, 3));
   (regDataMap["shim_dma_bd9_axi_config"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd9_axi_config"]).push_back(RegData("AxCache", "3:0", 0, 15));
   (regDataMap["shim_dma_bd9_axi_config"]).push_back(RegData("Secure_Access", "4", 4, 1));
   (regDataMap["shim_dma_bd9_axi_config"]).push_back(RegData("AxQoS", "8:5", 5, 15));
   (regDataMap["shim_dma_bd9_addr_low"]).push_back(RegData("Addr_Low", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Valid_BD", "0", 0, 1));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Use_Acquire_Value", "1", 1, 1));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Lock_ID", "10:7", 7, 15));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Next_BD", "14:11", 11, 15));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Use_Next_BD", "15", 15, 1));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Acquire_Value", "2", 2, 1));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Enable_Acquire", "3", 3, 1));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Addr_High", "31:16", 16, 65535));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Use_Release_Value", "4", 4, 1));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Release_Value", "5", 5, 1));
   (regDataMap["shim_dma_bd9_buffer_control"]).push_back(RegData("Enable_Release", "6", 6, 1));
   (regDataMap["shim_dma_bd9_buffer_length"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd9_packet"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_dma_bd9_packet"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["shim_dma_bd9_packet"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_0_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_1_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Start_Queue_Size_1", "11:9", 9, 7));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Cur_BD_0", "19:16", 16, 15));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Status0", "1:0", 0, 3));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Cur_BD_1", "23:20", 20, 15));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("AXI_MM_Decode_Error_0", "24", 24, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("AXI_MM_Decode_Error_1", "25", 25, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("AXI_MM_Slave_Error_0", "26", 26, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("AXI_MM_Slave_Error_1", "27", 27, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Start_Queue_Overflow_0", "28", 28, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Start_Queue_Overflow_1", "29", 29, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Status1", "3:2", 2, 3));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Stalled0", "4", 4, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Stalled1", "5", 5, 1));
   (regDataMap["shim_dma_mm2s_status"]).push_back(RegData("Start_Queue_Size_0", "8:6", 6, 7));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_0_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_1_start_queue"]).push_back(RegData("Start_BD", "3:0", 0, 15));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Start_Queue_Size_1", "11:9", 9, 7));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Cur_BD_0", "19:16", 16, 15));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Status0", "1:0", 0, 3));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Cur_BD_1", "23:20", 20, 15));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("AXI_MM_Decode_Error_0", "24", 24, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("AXI_MM_Decode_Error_1", "25", 25, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("AXI_MM_Slave_Error_0", "26", 26, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("AXI_MM_Slave_Error_1", "27", 27, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Start_Queue_Overflow_0", "28", 28, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Start_Queue_Overflow_1", "29", 29, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Status1", "3:2", 2, 3));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Stalled0", "4", 4, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Stalled1", "5", 5, 1));
   (regDataMap["shim_dma_s2mm_status"]).push_back(RegData("Start_Queue_Size_0", "8:6", 6, 7));
   (regDataMap["shim_demux_config"]).push_back(RegData("South5", "11:10", 10, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South2", "5:4", 4, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South3", "7:6", 6, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South4", "9:8", 8, 3));
   (regDataMap["shim_event_broadcast0_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast10_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast11_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast12_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast13_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast14_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast15_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast1_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast2_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast3_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast4_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast5_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast6_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast7_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast8_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast9_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast_a_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Perf_Cnt0", "2", 2, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Perf_Cnt1", "3", 3, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "4", 4, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "5", 5, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "6", 6, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "7", 7, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_0", "0", 0, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_1", "1", 1, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_10", "10", 10, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_11", "11", 11, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_12", "12", 12, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_13", "13", 13, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_14", "14", 14, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_15", "15", 15, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_2", "2", 2, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_3", "3", 3, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_4", "4", 4, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_5", "5", 5, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_6", "6", 6, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_7", "7", 7, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_8", "8", 8, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_9", "9", 9, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_start_BD", "0", 0, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_start_BD", "1", 1, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_go_to_idle", "10", 10, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_go_to_idle", "11", 11, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_start_BD", "2", 2, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_start_BD", "3", 3, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_finished_BD", "4", 4, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_finished_BD", "5", 5, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_finished_BD", "6", 6, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_finished_BD", "7", 7, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_go_to_idle", "8", 8, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_go_to_idle", "9", 9, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Slave_Tile_Error", "0", 0, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("Control_Pkt_Error", "1", 1, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("DMA_MM2S_1_Error", "10", 10, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Decode_NSU_Error", "2", 2, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Slave_NSU_Error", "3", 3, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Unsupported_Traffic", "4", 4, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Unsecure_Access_in_Secure_Mode", "5", 5, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Byte_Strobe_Error", "6", 6, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("DMA_S2MM_0_Error", "7", 7, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("DMA_S2MM_1_Error", "8", 8, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("DMA_MM2S_0_Error", "9", 9, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_0_Acquired", "0", 0, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_0_Release", "1", 1, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_5_Acquired", "10", 10, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_5_Release", "11", 11, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_6_Acquired", "12", 12, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_6_Release", "13", 13, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_7_Acquired", "14", 14, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_7_Release", "15", 15, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_8_Acquired", "16", 16, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_8_Release", "17", 17, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_9_Acquired", "18", 18, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_9_Release", "19", 19, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_1_Acquired", "2", 2, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_10_Acquired", "20", 20, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_10_Release", "21", 21, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_11_Acquired", "22", 22, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_11_Release", "23", 23, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_12_Acquired", "24", 24, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_12_Release", "25", 25, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_13_Acquired", "26", 26, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_13_Release", "27", 27, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_14_Acquired", "28", 28, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_14_Release", "29", 29, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_1_Release", "3", 3, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_15_Acquired", "30", 30, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_15_Release", "31", 31, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_2_Acquired", "4", 4, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_2_Release", "5", 5, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_3_Acquired", "6", 6, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_3_Release", "7", 7, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_4_Acquired", "8", 8, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_4_Release", "9", 9, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["shim_event_group_user_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["shim_event_group_user_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["shim_event_group_user_enable"]).push_back(RegData("User_Event_2", "2", 2, 1));
   (regDataMap["shim_event_group_user_enable"]).push_back(RegData("User_Event_3", "3", 3, 1));
   (regDataMap["shim_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_clear"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_clear"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_disable_a"]).push_back(RegData("Disable_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_disable_b"]).push_back(RegData("Disable_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_enable_a"]).push_back(RegData("Enable_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_enable_b"]).push_back(RegData("Enable_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event1", "14:8", 8, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event2", "22:16", 16, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event3", "30:24", 24, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event0", "6:0", 0, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event1", "14:8", 8, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event2", "22:16", 16, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event3", "30:24", 24, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event0", "6:0", 0, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_no_a"]).push_back(RegData("Irq_no_A", "3:0", 0, 15));
   (regDataMap["shim_interrupt_controller_1st_level_irq_no_b"]).push_back(RegData("Irq_no_B", "3:0", 0, 15));
   (regDataMap["shim_interrupt_controller_1st_level_mask_a"]).push_back(RegData("IRQ_Mask_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_mask_b"]).push_back(RegData("IRQ_Mask_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_status_a"]).push_back(RegData("Status_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_status_b"]).push_back(RegData("Status_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_2nd_level_disable"]).push_back(RegData("Disable_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_enable"]).push_back(RegData("Enable_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_interrupt"]).push_back(RegData("NoC_Interrupt", "1:0", 0, 3));
   (regDataMap["shim_interrupt_controller_2nd_level_mask"]).push_back(RegData("IRQ_Mask_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_status"]).push_back(RegData("Status_A", "15:0", 0, 65535));
   (regDataMap["shim_lock0_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock0_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock0_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock0_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock0_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock0_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock10_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock10_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock10_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock10_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock10_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock10_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock11_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock11_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock11_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock11_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock11_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock11_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock12_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock12_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock12_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock12_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock12_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock12_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock13_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock13_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock13_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock13_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock13_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock13_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock14_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock14_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock14_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock14_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock14_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock14_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock15_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock15_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock15_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock15_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock15_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock15_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock1_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock1_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock1_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock1_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock1_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock1_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock2_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock2_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock2_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock2_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock2_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock2_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock3_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock3_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock3_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock3_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock3_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock3_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock4_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock4_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock4_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock4_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock4_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock4_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock5_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock5_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock5_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock5_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock5_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock5_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock6_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock6_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock6_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock6_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock6_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock6_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock7_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock7_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock7_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock7_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock7_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock7_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock8_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock8_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock8_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock8_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock8_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock8_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock9_acquire_nv"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock9_acquire_v0"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock9_acquire_v1"]).push_back(RegData("Acquire_Done", "0", 0, 1));
   (regDataMap["shim_lock9_release_nv"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock9_release_v0"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock9_release_v1"]).push_back(RegData("Release_Done", "0", 0, 1));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_2_Release", "11:10", 10, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_3_Acquired", "13:12", 12, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_3_Release", "15:14", 14, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_4_Acquired", "17:16", 16, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_4_Release", "19:18", 18, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_0_Acquired", "1:0", 0, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_5_Acquired", "21:20", 20, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_5_Release", "23:22", 22, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_6_Acquired", "25:24", 24, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_6_Release", "27:26", 26, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_7_Acquired", "29:28", 28, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_7_Release", "31:30", 30, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_0_Release", "3:2", 2, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_1_Acquired", "5:4", 4, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_1_Release", "7:6", 6, 3));
   (regDataMap["shim_lock_event_value_control_0"]).push_back(RegData("Lock_2_Acquired", "9:8", 8, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_10_Release", "11:10", 10, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_11_Acquired", "13:12", 12, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_11_Release", "15:14", 14, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_12_Acquired", "17:16", 16, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_12_Release", "19:18", 18, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_8_Acquired", "1:0", 0, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_13_Acquired", "21:20", 20, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_13_Release", "23:22", 22, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_14_Acquired", "25:24", 24, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_14_Release", "27:26", 26, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_15_Acquired", "29:28", 28, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_15_Release", "31:30", 30, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_8_Release", "3:2", 2, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_9_Acquired", "5:4", 4, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_9_Release", "7:6", 6, 3));
   (regDataMap["shim_lock_event_value_control_1"]).push_back(RegData("Lock_10_Acquired", "9:8", 8, 3));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("Master_Sel", "0", 0, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("Slave_Sel", "1", 1, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("SLVERR_Block", "2", 2, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("DECERR_Block", "3", 3, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("reserved", "4", 4, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("reserved", "5", 5, 1));
   (regDataMap["shim_me_shim_reset_enable"]).push_back(RegData("Reset", "0", 0, 1));
   (regDataMap["shim_me_tile_column_reset"]).push_back(RegData("Reset", "0", 0, 1));
   (regDataMap["shim_mux_config"]).push_back(RegData("South3", "11:10", 10, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South6", "13:12", 12, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South7", "15:14", 14, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South2", "9:8", 8, 3));
   (regDataMap["shim_noc_interface_me_to_noc_south2"]).push_back(RegData("reserved", "21:10", 10, 4095));
   (regDataMap["shim_noc_interface_me_to_noc_south2"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_noc_interface_me_to_noc_south3"]).push_back(RegData("reserved", "21:10", 10, 4095));
   (regDataMap["shim_noc_interface_me_to_noc_south3"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_noc_interface_me_to_noc_south4"]).push_back(RegData("reserved", "21:10", 10, 4095));
   (regDataMap["shim_noc_interface_me_to_noc_south4"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_noc_interface_me_to_noc_south5"]).push_back(RegData("reserved", "21:10", 10, 4095));
   (regDataMap["shim_noc_interface_me_to_noc_south5"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South2", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South4", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South5", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South6", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South7", "10", 10, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South6_South7_128_combine", "11", 11, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South0_South1_128_combine", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South2", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South3", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South2_South3_128_combine", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South4", "6", 6, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South5", "7", 7, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South4_South5_128_combine", "8", 8, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South6", "9", 9, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South2", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South3", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South4", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South5", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South6", "6", 6, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South7", "7", 7, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South0_South1_128_combine", "2", 2, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South2", "3", 3, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South3", "4", 4, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South2_South3_128_combine", "5", 5, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South4", "6", 6, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South5", "7", 7, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South4_South5_128_combine", "8", 8, 1));
   (regDataMap["shim_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter0_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter1"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter1_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["shim_performance_ctrl1"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["shim_performance_ctrl1"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   (regDataMap["shim_reserved0"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_reserved1"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_reserved2"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_reserved3"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["shim_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_fifo1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_fifo1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_fifo1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_fifo1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_slave_east_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_east_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_east_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_east_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_east_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_fifo_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_north_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_north_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_north_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_north_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_4_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_5_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_6_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_south_7_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_trace_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_west_0_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_west_1_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_west_2_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_config"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_west_3_config"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_tile_clock_control"]).push_back(RegData("Clock_Buffer_Enable", "0", 0, 1));
   (regDataMap["shim_tile_clock_control"]).push_back(RegData("Next_Tile_Clock_Enable", "1", 1, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["shim_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["shim_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["shim_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["shim_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["shim_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["shim_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["shim_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["shim_trace_status"]).push_back(RegData("State", "9:8", 8, 3));

}

/*************************************************************************************
 * AIE2 Registers
 *************************************************************************************/
void AIE2WriterUsedRegisters::populateRegDataMap() {
   (regDataMap["cm_accumulator_control"]).push_back(RegData("Input", "0", 0, 1));
   (regDataMap["cm_accumulator_control"]).push_back(RegData("Output", "1", 1, 1));
   (regDataMap["cm_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   // (regDataMap["cm_core_amhh0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh8_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhh8_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl8_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amhl8_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh8_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amlh8_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll8_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_amll8_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_MAC_Huge_Mask", "10", 10, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("MCD_Enable", "11", 11, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("SCD_Enable", "12", 12, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Vadd_Sign", "13", 13, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Unpack_Sign", "14", 14, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Pack_Sign", "15", 15, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("UPS_Sign", "16", 16, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("SRS_Sign", "17", 17, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Bfloat_to_Int_Zero_Mask", "18", 18, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("reserved", "19", 19, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Saturation_Mode", "1:0", 0, 3));
   (regDataMap["cm_core_cr"]).push_back(RegData("Bfloat_to_Int_Invalid_Mask", "20", 20, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Bfloat_to_Int_Tiny_Mask", "21", 21, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Bfloat_to_Int_Huge_Mask", "22", 22, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_to_Bfloat_Zero_Mask", "23", 23, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_to_Bfloat_Infinity_Mask", "24", 24, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_to_Bfloat_Invalid_Mask", "25", 25, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_to_Bfloat_Tiny_Mask", "26", 26, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_to_Bfloat_Huge_Mask", "27", 27, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Round_Mode", "5:2", 2, 15));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_MAC_Zero_Mask", "6", 6, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_MAC_Infinity_Mask", "7", 7, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_MAC_Invalid_Mask", "8", 8, 1));
   (regDataMap["cm_core_cr"]).push_back(RegData("Float_MAC_Tiny_Mask", "9", 9, 1));
   (regDataMap["cm_core_control"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_control"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["cm_core_dc0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dp"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_fc"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_lc"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_le"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_lr"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_ls"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_pc"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_processor_bus"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_processor_bus"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   // (regDataMap["cm_core_q0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_q1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_q2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_q3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_r0"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r1"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r10"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r11"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r12"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r13"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r14"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r15"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r16"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r17"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r18"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r19"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r2"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r20"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r21"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r22"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r23"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r24"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r25"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r26"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r27"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r28"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r29"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r3"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r30"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r31"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r4"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r5"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r6"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r7"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r8"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r9"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_s0"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_s1"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_s2"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_s3"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_sp"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_sr"]).push_back(RegData("Carry", "0", 0, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("SS0_Success", "1", 1, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_MAC_Tiny_Flag", "10", 10, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_MAC_Huge_Flag", "11", 11, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Bfloat_to_Int_Zero_Flag", "12", 12, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("reserved", "13", 13, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Bfloat_to_Int_Invalid_Flag", "14", 14, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Bfloat_to_Int_Tiny_Flag", "15", 15, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Bfloat_to_Int_Huge_Flag", "16", 16, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_to_Bfloat_Zero_Flag", "17", 17, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_to_Bfloat_Infinity_Flag", "18", 18, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_to_Bfloat_Invalid_Flag", "19", 19, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("SS0_Tlast", "2", 2, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_to_Bfloat_Tiny_Flag", "20", 20, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_to_Bfloat_Huge_Flag", "21", 21, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Sparse_Overflow", "22", 22, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("MS0_Success", "3", 3, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("SRS_Overflow", "4", 4, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("UPS_Overflow", "5", 5, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Compression_Underflow", "6", 6, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_MAC_Zero_Flag", "7", 7, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_MAC_Infinity_Flag", "8", 8, 1));
   (regDataMap["cm_core_sr"]).push_back(RegData("Float_MAC_Invalid_Flag", "9", 9, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_SS0", "10", 10, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_MS0", "12", 12, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Cascade_Stall_SCD", "14", 14, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Cascade_Stall_MCD", "15", 15, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Debug_Halt", "16", 16, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("ECC_Error_Stall", "17", 17, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("ECC_Scrubbing_Stall", "18", 18, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Error_Halt", "19", 19, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_S", "2", 2, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Core_Done", "20", 20, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Core_Processor_Bus_Stall", "21", 21, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_W", "3", 3, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_N", "4", 4, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_E", "5", 5, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_S", "6", 6, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_W", "7", 7, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_N", "8", 8, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_E", "9", 9, 1));
   // (regDataMap["cm_core_wh0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh10_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh10_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh11_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh11_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh8_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh8_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh9_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wh9_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl10_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl10_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl11_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl11_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl8_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl8_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl9_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_wl9_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_debug_control0"]).push_back(RegData("Debug_Halt_Bit", "0", 0, 1));
   (regDataMap["cm_debug_control0"]).push_back(RegData("Single_Step_Count", "5:2", 2, 15));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_SingleStep_Core_Event", "14:8", 8, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Halt_Core_Event0", "22:16", 16, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Halt_Core_Event1", "30:24", 24, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Resume_Core_Event", "6:0", 0, 127));
   (regDataMap["cm_debug_control2"]).push_back(RegData("PC_Event_Halt", "0", 0, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Memory_Stall_Halt", "1", 1, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Lock_Stall_Halt", "2", 2, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Stream_Stall_Halt", "3", 3, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_halted", "0", 0, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("PC_Event_halted", "1", 1, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Memory_Stall_Halted", "2", 2, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Lock_Stall_Halted", "3", 3, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Stream_stall_Halted", "4", 4, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_Event0_Halted", "5", 5, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_Event1_Halted", "6", 6, 1));
   (regDataMap["cm_ecc_control"]).push_back(RegData("Stall_Core_Control", "0", 0, 1));
   (regDataMap["cm_ecc_control"]).push_back(RegData("Unstall_Core", "1", 1, 1));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "13:0", 0, 16383));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("Access_Type", "14", 14, 1));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("Clear_failing_address", "15", 15, 1));
   (regDataMap["cm_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_number", "6:0", 0, 127));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "22:16", 16, 127));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "6:0", 0, 127));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["cm_enable_events"]).push_back(RegData("Disable_Event", "14:8", 8, 127));
   (regDataMap["cm_enable_events"]).push_back(RegData("Disable_Event_occurred", "15", 15, 1));
   (regDataMap["cm_enable_events"]).push_back(RegData("Enable_Event", "6:0", 0, 127));
   (regDataMap["cm_enable_events"]).push_back(RegData("Enable_Event_occurred", "7", 7, 1));
   (regDataMap["cm_error_halt_control"]).push_back(RegData("Error_Halt", "0", 0, 1));
   (regDataMap["cm_error_halt_event"]).push_back(RegData("Error_Halt_Core_Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast0"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast1"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast10"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast11"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast12"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast13"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast14"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast15"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast2"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast3"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast4"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast5"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast6"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast7"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast8"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast9"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "10", 10, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "11", 11, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt0", "2", 2, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt1", "3", 3, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt2", "4", 4, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt3", "5", 5, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "6", 6, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "7", 7, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "8", 8, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "9", 9, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_0", "0", 0, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_1", "1", 1, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_10", "10", 10, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_11", "11", 11, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_12", "12", 12, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_13", "13", 13, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_14", "14", 14, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_15", "15", 15, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_2", "2", 2, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_3", "3", 3, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_4", "4", 4, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_5", "5", 5, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_6", "6", 6, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_7", "7", 7, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_8", "8", 8, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_9", "9", 9, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Event_0", "0", 0, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Event_1", "1", 1, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Cascade_Put", "10", 10, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Lock_Acquire_req", "11", 11, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Lock_Release_req", "12", 12, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Call", "2", 2, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Return", "3", 3, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Vector", "4", 4, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Load", "5", 5, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Store", "6", 6, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Stream_Get", "7", 7, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Stream_Put", "8", 8, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Cascade_Get", "9", 9, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Memory_Stall", "0", 0, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Stream_Stall", "1", 1, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Cascade_Stall", "2", 2, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Lock_Stall", "3", 3, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Debug", "4", 4, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Active", "5", 5, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Disable", "6", 6, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("ECC_Scrubbing_Stall", "7", 7, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("ECC_Error_Stall", "8", 8, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("SRS_Overflow", "0", 0, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("UPS_Overflow", "1", 1, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("AXI_MM_Slave_Error", "10", 10, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instruction_Decompression_Error", "11", 11, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("DM_address_out_of_range", "12", 12, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_Scrub_Corrected", "13", 13, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_Scrub_2bit", "14", 14, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_1bit", "15", 15, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_2bit", "16", 16, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_address_out_of_range", "17", 17, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("DM_access_to_Unavailable", "18", 18, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Lock_Access_to_Unavailable", "19", 19, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Huge", "2", 2, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instr_Warning", "20", 20, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instr_Error", "21", 21, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Decompression_underflow", "22", 22, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "23", 23, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Processor_Bus_Error", "24", 24, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Int_FP_Zero", "3", 3, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Invalid", "4", 4, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_INF", "5", 5, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("reserved0", "6", 6, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_Reg_Access_Failure", "7", 7, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "8", 8, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Control_Pkt_Error", "9", 9, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("SRS_Overflow", "0", 0, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("UPS_Overflow", "1", 1, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("AXI_MM_Slave_Error", "10", 10, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instruction_Decompression_Error", "11", 11, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("DM_address_out_of_range", "12", 12, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_Scrub_Corrected", "13", 13, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_Scrub_2bit", "14", 14, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_1bit", "15", 15, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_2bit", "16", 16, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_address_out_of_range", "17", 17, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("DM_access_to_Unavailable", "18", 18, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Lock_Access_to_Unavailable", "19", 19, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Huge", "2", 2, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instr_Warning", "20", 20, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instr_Error", "21", 21, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Decompression_underflow", "22", 22, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "23", 23, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Processor_Bus_Error", "24", 24, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Int_FP_Zero", "3", 3, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Invalid", "4", 4, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_INF", "5", 5, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("reserved0", "6", 6, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_Reg_Access_Failure", "7", 7, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "8", 8, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Control_Pkt_Error", "9", 9, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_0", "0", 0, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_1", "1", 1, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_2", "2", 2, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_3", "3", 3, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_Range_0_1", "4", 4, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_Range_2_3", "5", 5, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_2", "2", 2, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_3", "3", 3, 1));
   (regDataMap["cm_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_memory_control"]).push_back(RegData("Memory_Zeroisation", "0", 0, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Stream_Switch_Clock_Enable", "0", 0, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Memory_Module_Clock_Enable", "1", 1, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Core_Module_Clock_Enable", "2", 2, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Stream_Switch_Adaptive_Clock_Gate", "4", 4, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("DMA_Adaptive_Clock_Gate", "5", 5, 1));
   (regDataMap["cm_module_reset_control"]).push_back(RegData("Stream_Switch_Reset", "0", 0, 1));
   (regDataMap["cm_module_reset_control"]).push_back(RegData("Memory_Module_Reset", "1", 1, 1));
   (regDataMap["cm_module_reset_control"]).push_back(RegData("Core_Module_Reset", "2", 2, 1));
   (regDataMap["cm_pc_event0"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event1"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event2"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event2"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event3"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event3"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt2_Stop_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt3_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt3_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt2_Start_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt2_Reset_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt3_Reset_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter0_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter1"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter1_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter2"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter2_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter3"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter3_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   // (regDataMap["cm_reserved0"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved1"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved10"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved11"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved12"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved13"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved14"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved15"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved16"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved17"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved18"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved19"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved2"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved20"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved21"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved22"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved23"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved24"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved25"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved26"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved27"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved28"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved29"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved3"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved30"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved31"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved32"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved33"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved34"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved35"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved36"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved37"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved38"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved39"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved4"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved40"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved41"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved42"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved43"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved44"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved45"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved46"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved47"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved48"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved49"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved5"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved50"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved51"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved52"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved53"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved54"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved55"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved56"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved57"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved58"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved59"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved6"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved60"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved61"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved62"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved63"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved64"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved65"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved66"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved67"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved68"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved69"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved7"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved70"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved71"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved8"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_reserved9"]).push_back(RegData("reserved", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_reset_event"]).push_back(RegData("Reset_Event", "6:0", 0, 127));
   (regDataMap["cm_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["cm_stream_switch_adaptive_clock_gate_abort_period"]).push_back(RegData("Abort_Period", "3:0", 0, 15));
   (regDataMap["cm_stream_switch_adaptive_clock_gate_status"]).push_back(RegData("Active", "0", 0, 1));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Core", "0", 0, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("DMA_0", "1", 1, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("DMA_1", "2", 2, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Tile_Control", "3", 3, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("AIE_Trace", "4", 4, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Mem_trace", "5", 5, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("Core", "0", 0, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("DMA_0", "1", 1, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("DMA_1", "2", 2, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("Tile_Control", "3", 3, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_core0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_core0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_fifo_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_fifo_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_mem_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_mem_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("First_Header_Parity_Error", "0", 0, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("Second_Header_Parity_Error", "1", 1, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("Tlast_Error", "3", 3, 1));
   (regDataMap["cm_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["cm_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["cm_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Mode", "1:0", 0, 3));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["cm_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["cm_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["cm_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane0", "0", 0, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane1", "1", 1, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane2", "2", 2, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane3", "3", 3, 1));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   (regDataMap["mm_dma_bd0_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd0_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd0_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd0_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd0_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd0_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd0_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd10_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd10_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd10_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd10_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd10_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd10_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd10_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd11_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd11_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd11_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd11_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd11_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd11_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd11_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd12_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd12_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd12_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd12_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd12_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd12_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd12_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd13_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd13_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd13_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd13_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd13_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd13_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd13_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd14_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd14_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd14_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd14_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd14_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd14_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd14_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd15_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd15_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd15_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd15_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd15_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd15_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd15_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd1_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd1_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd1_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd1_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd1_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd1_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd1_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd2_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd2_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd2_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd2_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd2_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd2_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd2_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd3_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd3_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd3_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd3_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd3_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd3_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd3_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd4_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd4_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd4_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd4_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd4_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd4_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd4_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd5_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd5_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd5_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd5_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd5_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd5_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd5_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd6_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd6_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd6_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd6_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd6_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd6_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd6_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd7_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd7_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd7_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd7_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd7_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd7_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd7_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd8_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd8_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd8_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd8_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd8_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd8_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd8_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd9_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd9_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd9_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd9_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd9_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd9_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd9_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("reserved", "0", 0, 1));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_mm2s_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_mm2s_0_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("reserved", "0", 0, 1));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_mm2s_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_mm2s_1_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("reserved", "0", 0, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_s2mm_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_0_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("reserved", "0", 0, 1));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_s2mm_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_1_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_s2mm_current_write_count_0"]).push_back(RegData("Current_Write_Count", "13:0", 0, 16383));
   (regDataMap["mm_dma_s2mm_current_write_count_1"]).push_back(RegData("Current_Write_Count", "13:0", 0, 16383));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mm_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "13:0", 0, 16383));
   (regDataMap["mm_ecc_failing_address"]).push_back(RegData("Valid", "15", 15, 1));
   (regDataMap["mm_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_number", "6:0", 0, 127));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "22:16", 16, 127));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "6:0", 0, 127));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["mm_event_broadcast0"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast1"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast10"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast11"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast12"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast13"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast14"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast15"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast2"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast3"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast4"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast5"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast6"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast7"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast8"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast9"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Perf_Cnt0_Event", "2", 2, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Perf_Cnt1_Event", "3", 3, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "4", 4, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "5", 5, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "6", 6, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "7", 7, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "8", 8, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "9", 9, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_0", "0", 0, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_1", "1", 1, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_10", "10", 10, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_11", "11", 11, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_12", "12", 12, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_13", "13", 13, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_14", "14", 14, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_15", "15", 15, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_2", "2", 2, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_3", "3", 3, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_4", "4", 4, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_5", "5", 5, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_6", "6", 6, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_7", "7", 7, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_8", "8", 8, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_9", "9", 9, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_start_task", "0", 0, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_start_task", "1", 1, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_finished_task", "10", 10, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_finished_task", "11", 11, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_stream_starvation", "16", 16, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_stream_starvation", "17", 17, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_memory_backpressure", "18", 18, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_memory_backpressure", "19", 19, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_start_task", "2", 2, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_stream_backpressure", "20", 20, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_stream_backpressure", "21", 21, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_memory_starvation", "22", 22, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_memory_starvation", "23", 23, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_start_task", "3", 3, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_finished_BD", "4", 4, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_finished_BD", "5", 5, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_finished_BD", "6", 6, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_finished_BD", "7", 7, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_finished_task", "8", 8, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_finished_task", "9", 9, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_Corrected", "0", 0, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_2bit", "1", 1, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_S2MM_0_Error", "10", 10, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_S2MM_1_Error", "11", 11, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_MM2S_0_Error", "12", 12, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_MM2S_1_Error", "13", 13, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("Lock_Error", "14", 14, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_Task_Token_Stall", "15", 15, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_1bit", "2", 2, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_2bit", "3", 3, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_2", "4", 4, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_3", "5", 5, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_4", "6", 6, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_5", "7", 7, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_6", "8", 8, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_7", "9", 9, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_eq", "0", 0, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_ge", "1", 1, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_rel", "10", 10, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_equal_to_value", "11", 11, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_eq", "12", 12, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_ge", "13", 13, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_rel", "14", 14, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_equal_to_value", "15", 15, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_eq", "16", 16, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_ge", "17", 17, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_rel", "18", 18, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_equal_to_value", "19", 19, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_rel", "2", 2, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_eq", "20", 20, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_ge", "21", 21, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_rel", "22", 22, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_equal_to_value", "23", 23, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_eq", "24", 24, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_ge", "25", 25, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_rel", "26", 26, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_equal_to_value", "27", 27, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_eq", "28", 28, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_ge", "29", 29, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_equal_to_value", "3", 3, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_rel", "30", 30, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_equal_to_value", "31", 31, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_eq", "4", 4, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_ge", "5", 5, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_rel", "6", 6, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_equal_to_value", "7", 7, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_eq", "8", 8, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_ge", "9", 9, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_0", "0", 0, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_1", "1", 1, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_2", "2", 2, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_3", "3", 3, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_4", "4", 4, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_5", "5", 5, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_6", "6", 6, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_7", "7", 7, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_2", "2", 2, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_3", "3", 3, 1));
   (regDataMap["mm_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_0", "0", 0, 1));
   (regDataMap["mm_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_1", "1", 1, 1));
   (regDataMap["mm_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_lock0_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock10_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock11_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock12_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock13_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock14_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock15_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock1_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock2_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock3_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock4_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock5_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock6_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock7_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock8_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock9_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock_request"]).push_back(RegData("Request_Result", "0", 0, 1));
   (regDataMap["mm_locks_event_selection_0"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_0"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_1"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_1"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_2"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_2"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_3"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_3"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_4"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_4"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_5"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_5"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_6"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_6"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_7"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_7"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_0", "0", 0, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_1", "1", 1, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_10", "10", 10, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_11", "11", 11, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_12", "12", 12, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_13", "13", 13, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_14", "14", 14, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_15", "15", 15, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_2", "2", 2, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_3", "3", 3, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_4", "4", 4, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_5", "5", 5, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_6", "6", 6, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_7", "7", 7, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_8", "8", 8, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_9", "9", 9, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_0", "0", 0, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_1", "1", 1, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_10", "10", 10, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_11", "11", 11, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_12", "12", 12, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_13", "13", 13, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_14", "14", 14, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_15", "15", 15, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_2", "2", 2, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_3", "3", 3, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_4", "4", 4, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_5", "5", 5, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_6", "6", 6, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_7", "7", 7, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_8", "8", 8, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_9", "9", 9, 1));
   (regDataMap["mm_memory_control"]).push_back(RegData("Memory_Zeroisation", "0", 0, 1));
   (regDataMap["mm_parity_failing_address"]).push_back(RegData("Parity_Error_Detection_Address", "15:0", 0, 65535));
   (regDataMap["mm_parity_failing_address"]).push_back(RegData("Valid", "16", 16, 1));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_control1"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control1"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter0_event_value"]).push_back(RegData("Counter0_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter1"]).push_back(RegData("Counter1_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter1_event_value"]).push_back(RegData("Counter1_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved0"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved1"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved2"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_reserved3"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mm_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["mm_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["mm_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["mm_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["mm_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["mm_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["mm_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["mm_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["mm_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Address", "15:4", 4, 4095));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("South_Access", "24", 24, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("West_Access", "25", 25, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("North_Access", "26", 26, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("East_Access", "27", 27, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("DMA_Access", "28", 28, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("AXI_Access", "29", 29, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Write_Access", "30", 30, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Read_Access", "31", 31, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Address", "15:4", 4, 4095));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("South_Access", "24", 24, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("West_Access", "25", 25, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("North_Access", "26", 26, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("East_Access", "27", 27, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("DMA_Access", "28", 28, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("AXI_Access", "29", 29, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Write_Access", "30", 30, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Read_Access", "31", 31, 1));
   (regDataMap["mem_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane0", "0", 0, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane1", "1", 1, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane2", "2", 2, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane3", "3", 3, 1));
   (regDataMap["mem_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["mem_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["mem_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventB", "15:8", 8, 255));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventC", "23:16", 16, 255));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventD", "31:24", 24, 255));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventA", "7:0", 0, 255));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd0_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd0_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd10_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd10_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd11_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd11_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd12_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd12_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd13_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd13_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd14_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd14_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd15_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd15_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd16_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd16_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd17_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd17_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd18_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd18_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd19_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd19_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd1_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd1_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd20_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd20_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd21_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd21_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd22_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd22_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd23_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd23_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd24_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd24_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd25_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd25_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd26_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd26_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd27_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd27_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd28_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd28_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd29_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd29_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd2_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd2_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd30_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd30_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd31_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd31_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd32_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd32_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd33_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd33_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd34_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd34_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd35_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd35_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd36_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd36_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd37_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd37_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd38_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd38_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd39_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd39_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd3_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd3_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd40_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd40_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd41_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd41_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd42_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd42_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd43_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd43_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd44_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd44_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd45_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd45_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd46_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd46_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd47_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd47_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd4_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd4_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd5_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd5_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd6_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd6_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd7_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd7_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd8_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd8_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("D0_Zero_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd9_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd9_3"]).push_back(RegData("D1_Zero_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("D2_Zero_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D0_Zero_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D1_Zero_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D2_Zero_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("S2MM_Sel1_Channel", "10:8", 8, 7));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("MM2S_Sel0_Channel", "18:16", 16, 7));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("MM2S_Sel1_Channel", "26:24", 24, 7));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("S2MM_Sel0_Channel", "2:0", 0, 7));
   (regDataMap["mem_dma_mm2s_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_0_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_0_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_1_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_1_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_2_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_2_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_2_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_2_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_2_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_2_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_3_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_3_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_3_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_3_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_3_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_3_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_4_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_4_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_4_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_4_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_4_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_4_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_5_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_5_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_5_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_5_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_5_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_5_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_0_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_1_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_2_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_2_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_2_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_3_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_3_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_3_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_4_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_4_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_4_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_5_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_5_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_5_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_current_write_count_0"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_1"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_2"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_3"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_4"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_5"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "18:0", 0, 524287));
   (regDataMap["mem_ecc_failing_address"]).push_back(RegData("Valid", "19", 19, 1));
   (regDataMap["mem_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_Number", "7:0", 0, 255));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "23:16", 16, 255));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "7:0", 0, 255));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["mem_event_broadcast0"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast1"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast10"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast11"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast12"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast13"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast14"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast15"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast2"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast3"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast4"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast5"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast6"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast7"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast8"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast9"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast_a_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_generate"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "10", 10, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "11", 11, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt0_Event", "2", 2, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt1_Event", "3", 3, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt2_Event", "4", 4, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt3_Event", "5", 5, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "6", 6, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "7", 7, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "8", 8, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "9", 9, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_0", "0", 0, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_1", "1", 1, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_10", "10", 10, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_11", "11", 11, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_12", "12", 12, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_13", "13", 13, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_14", "14", 14, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_15", "15", 15, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_2", "2", 2, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_3", "3", 3, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_4", "4", 4, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_5", "5", 5, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_6", "6", 6, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_7", "7", 7, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_8", "8", 8, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_9", "9", 9, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_start_task", "0", 0, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_start_task", "1", 1, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_finished_task", "10", 10, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_finished_task", "11", 11, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_stream_starvation", "16", 16, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_stream_starvation", "17", 17, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_stream_backpressure", "18", 18, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_stream_backpressure", "19", 19, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_start_task", "2", 2, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_memory_backpressure", "20", 20, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_memory_backpressure", "21", 21, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_memory_starvation", "22", 22, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_memory_starvation", "23", 23, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_start_task", "3", 3, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_finished_BD", "4", 4, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_finished_BD", "5", 5, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_finished_BD", "6", 6, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_finished_BD", "7", 7, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_finished_task", "8", 8, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_finished_task", "9", 9, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_Corrected", "0", 0, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_2bit", "1", 1, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Lock_Error", "10", 10, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DMA_Task_Token_Stall", "11", 11, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_1bit", "2", 2, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_2bit", "3", 3, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DMA_S2MM_Error", "4", 4, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DMA_MM2S_Error", "5", 5, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "6", 6, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "7", 7, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Control_Pkt_Error", "8", 8, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("AXI_MM_Slave_Error", "9", 9, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_eq", "0", 0, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_ge", "1", 1, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_rel", "10", 10, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_equal_to_value", "11", 11, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_eq", "12", 12, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_ge", "13", 13, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_rel", "14", 14, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_equal_to_value", "15", 15, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_eq", "16", 16, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_ge", "17", 17, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_rel", "18", 18, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_equal_to_value", "19", 19, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_rel", "2", 2, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_eq", "20", 20, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_ge", "21", 21, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_rel", "22", 22, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_equal_to_value", "23", 23, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_eq", "24", 24, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_ge", "25", 25, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_rel", "26", 26, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_equal_to_value", "27", 27, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_eq", "28", 28, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_ge", "29", 29, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_equal_to_value", "3", 3, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_rel", "30", 30, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_equal_to_value", "31", 31, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_eq", "4", 4, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_ge", "5", 5, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_rel", "6", 6, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_equal_to_value", "7", 7, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_eq", "8", 8, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_ge", "9", 9, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_0", "0", 0, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_1", "1", 1, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_10", "10", 10, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_11", "11", 11, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_12", "12", 12, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_13", "13", 13, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_14", "14", 14, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_15", "15", 15, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_2", "2", 2, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_3", "3", 3, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_4", "4", 4, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_5", "5", 5, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_6", "6", 6, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_7", "7", 7, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_8", "8", 8, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_9", "9", 9, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["mem_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["mem_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_0", "0", 0, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_1", "1", 1, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_2", "2", 2, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_3", "3", 3, 1));
   (regDataMap["mem_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status4"]).push_back(RegData("Event_159_128_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status5"]).push_back(RegData("Event_191_160_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_lock0_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock10_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock11_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock12_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock13_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock14_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock15_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock16_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock17_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock18_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock19_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock1_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock20_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock21_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock22_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock23_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock24_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock25_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock26_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock27_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock28_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock29_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock2_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock30_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock31_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock32_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock33_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock34_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock35_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock36_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock37_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock38_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock39_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock3_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock40_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock41_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock42_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock43_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock44_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock45_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock46_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock47_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock48_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock49_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock4_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock50_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock51_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock52_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock53_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock54_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock55_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock56_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock57_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock58_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock59_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock5_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock60_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock61_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock62_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock63_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock6_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock7_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock8_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock9_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock_request"]).push_back(RegData("Request_Result", "0", 0, 1));
   (regDataMap["mem_locks_event_selection_0"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_0"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_1"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_1"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_2"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_2"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_3"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_3"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_4"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_4"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_5"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_5"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_6"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_6"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_7"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_7"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_0", "0", 0, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_1", "1", 1, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_10", "10", 10, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_11", "11", 11, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_12", "12", 12, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_13", "13", 13, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_14", "14", 14, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_15", "15", 15, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_16", "16", 16, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_17", "17", 17, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_18", "18", 18, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_19", "19", 19, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_2", "2", 2, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_20", "20", 20, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_21", "21", 21, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_22", "22", 22, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_23", "23", 23, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_24", "24", 24, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_25", "25", 25, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_26", "26", 26, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_27", "27", 27, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_28", "28", 28, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_29", "29", 29, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_3", "3", 3, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_30", "30", 30, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_31", "31", 31, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_4", "4", 4, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_5", "5", 5, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_6", "6", 6, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_7", "7", 7, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_8", "8", 8, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_9", "9", 9, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_32", "0", 0, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_33", "1", 1, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_42", "10", 10, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_43", "11", 11, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_44", "12", 12, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_45", "13", 13, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_46", "14", 14, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_47", "15", 15, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_48", "16", 16, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_49", "17", 17, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_50", "18", 18, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_51", "19", 19, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_34", "2", 2, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_52", "20", 20, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_53", "21", 21, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_54", "22", 22, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_55", "23", 23, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_56", "24", 24, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_57", "25", 25, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_58", "26", 26, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_59", "27", 27, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_60", "28", 28, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_61", "29", 29, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_35", "3", 3, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_62", "30", 30, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_63", "31", 31, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_36", "4", 4, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_37", "5", 5, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_38", "6", 6, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_39", "7", 7, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_40", "8", 8, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_41", "9", 9, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_0", "0", 0, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_1", "1", 1, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_10", "10", 10, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_11", "11", 11, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_12", "12", 12, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_13", "13", 13, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_14", "14", 14, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_15", "15", 15, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_16", "16", 16, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_17", "17", 17, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_18", "18", 18, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_19", "19", 19, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_2", "2", 2, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_20", "20", 20, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_21", "21", 21, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_22", "22", 22, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_23", "23", 23, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_24", "24", 24, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_25", "25", 25, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_26", "26", 26, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_27", "27", 27, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_28", "28", 28, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_29", "29", 29, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_3", "3", 3, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_30", "30", 30, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_31", "31", 31, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_4", "4", 4, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_5", "5", 5, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_6", "6", 6, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_7", "7", 7, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_8", "8", 8, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_9", "9", 9, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_32", "0", 0, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_33", "1", 1, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_42", "10", 10, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_43", "11", 11, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_44", "12", 12, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_45", "13", 13, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_46", "14", 14, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_47", "15", 15, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_48", "16", 16, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_49", "17", 17, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_50", "18", 18, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_51", "19", 19, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_34", "2", 2, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_52", "20", 20, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_53", "21", 21, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_54", "22", 22, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_55", "23", 23, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_56", "24", 24, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_57", "25", 25, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_58", "26", 26, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_59", "27", 27, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_60", "28", 28, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_61", "29", 29, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_35", "3", 3, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_62", "30", 30, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_63", "31", 31, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_36", "4", 4, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_37", "5", 5, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_38", "6", 6, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_39", "7", 7, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_40", "8", 8, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_41", "9", 9, 1));
   (regDataMap["mem_memory_control"]).push_back(RegData("Memory_Zeroisation", "0", 0, 1));
   (regDataMap["mem_memory_control"]).push_back(RegData("Memory_Interleaving", "1", 1, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("Stream_Switch_Clock_Enable", "0", 0, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("Memory_Module_Clock_Enable", "1", 1, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("Stream_Switch_Adaptive_Clock_Gate", "4", 4, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("DMA_Adaptive_Clock_Gate", "5", 5, 1));
   (regDataMap["mem_module_reset_control"]).push_back(RegData("Stream_Switch_Reset", "0", 0, 1));
   (regDataMap["mem_module_reset_control"]).push_back(RegData("Memory_Reset", "1", 1, 1));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt0_Stop_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt1_Start_Event", "23:16", 16, 255));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt1_Stop_Event", "31:24", 24, 255));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt0_Start_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt2_Stop_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt3_Start_Event", "23:16", 16, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt3_Stop_Event", "31:24", 24, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt2_Start_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt1_Reset_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt2_Reset_Event", "23:16", 16, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt3_Reset_Event", "31:24", 24, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt0_Reset_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter0_event_value"]).push_back(RegData("Counter0_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter1"]).push_back(RegData("Counter1_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter1_event_value"]).push_back(RegData("Counter1_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter2"]).push_back(RegData("Counter2_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter2_event_value"]).push_back(RegData("Counter2_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter3"]).push_back(RegData("Counter3_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter3_event_value"]).push_back(RegData("Counter3_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_reserved0"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mem_reserved1"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mem_reserved2"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mem_reserved3"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["mem_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["mem_stream_switch_adaptive_clock_gate_abort_period"]).push_back(RegData("Abort_Period", "3:0", 0, 15));
   (regDataMap["mem_stream_switch_adaptive_clock_gate_status"]).push_back(RegData("Active", "0", 0, 1));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_0", "0", 0, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_1", "1", 1, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_2", "2", 2, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_3", "3", 3, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_4", "4", 4, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_5", "5", 5, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("Tile_Control", "6", 6, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("Mem_trace", "7", 7, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_0", "0", 0, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_1", "1", 1, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_2", "2", 2, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_3", "3", 3, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_4", "4", 4, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_5", "5", 5, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("Tile_Control", "6", 6, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("First_Header_Parity_Error", "0", 0, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("Second_Header_Parity_Error", "1", 1, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("Tlast_Error", "3", 3, 1));
   (regDataMap["mem_timer_control"]).push_back(RegData("Reset_Event", "15:8", 8, 255));
   (regDataMap["mem_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["mem_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["mem_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["mem_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["mem_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["mem_trace_control0"]).push_back(RegData("Trace_Start_Event", "23:16", 16, 255));
   (regDataMap["mem_trace_control0"]).push_back(RegData("Trace_Stop_Event", "31:24", 24, 255));
   (regDataMap["mem_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mem_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event1", "15:8", 8, 255));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event2", "23:16", 16, 255));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event3", "31:24", 24, 255));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event0", "7:0", 0, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event5", "15:8", 8, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event6", "23:16", 16, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event7", "31:24", 24, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event4", "7:0", 0, 255));
   (regDataMap["mem_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["mem_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("Address", "18:4", 4, 32767));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("Address", "18:4", 4, 32767));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("Address", "18:4", 4, 32767));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("Address", "18:4", 4, 32767));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("WriteStrobes", "23:20", 20, 15));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["shim_bisr_cache_ctrl"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["shim_bisr_cache_ctrl"]).push_back(RegData("Clear", "4", 4, 1));
   (regDataMap["shim_bisr_cache_data0"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data1"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data2"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data3"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_status"]).push_back(RegData("Done", "0", 0, 1));
   (regDataMap["shim_bisr_cache_status"]).push_back(RegData("Pass", "1", 1, 1));
   (regDataMap["shim_bisr_test_data0"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data1"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data2"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data3"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["shim_column_clock_control"]).push_back(RegData("Clock_Buffer_Enable", "0", 0, 1));
   (regDataMap["shim_column_reset_control"]).push_back(RegData("Reset", "0", 0, 1));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("First_Header_Parity_Error", "0", 0, 1));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("Second_Header_Parity_Error", "1", 1, 1));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("Tlast_Error", "3", 3, 1));
   (regDataMap["shim_dma_bd0_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd0_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd0_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd0_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd0_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd0_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd0_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd0_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd0_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd0_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd0_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd0_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd10_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd10_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd10_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd10_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd10_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd10_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd10_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd10_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd10_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd10_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd10_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd10_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd11_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd11_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd11_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd11_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd11_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd11_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd11_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd11_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd11_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd11_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd11_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd11_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd12_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd12_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd12_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd12_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd12_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd12_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd12_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd12_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd12_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd12_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd12_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd12_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd13_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd13_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd13_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd13_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd13_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd13_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd13_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd13_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd13_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd13_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd13_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd13_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd14_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd14_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd14_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd14_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd14_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd14_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd14_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd14_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd14_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd14_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd14_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd14_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd15_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd15_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd15_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd15_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd15_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd15_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd15_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd15_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd15_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd15_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd15_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd15_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd1_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd1_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd1_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd1_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd1_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd1_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd1_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd1_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd1_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd1_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd1_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd1_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd2_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd2_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd2_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd2_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd2_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd2_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd2_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd2_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd2_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd2_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd2_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd2_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd3_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd3_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd3_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd3_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd3_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd3_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd3_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd3_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd3_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd3_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd3_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd3_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd4_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd4_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd4_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd4_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd4_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd4_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd4_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd4_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd4_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd4_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd4_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd4_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd5_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd5_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd5_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd5_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd5_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd5_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd5_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd5_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd5_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd5_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd5_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd5_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd6_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd6_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd6_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd6_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd6_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd6_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd6_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd6_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd6_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd6_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd6_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd6_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd7_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd7_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd7_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd7_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd7_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd7_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd7_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd7_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd7_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd7_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd7_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd7_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd8_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd8_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd8_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd8_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd8_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd8_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd8_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd8_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd8_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd8_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd8_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd8_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd9_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd9_1"]).push_back(RegData("reserved", "1:0", 0, 3));
   (regDataMap["shim_dma_bd9_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd9_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd9_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd9_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd9_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd9_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd9_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd9_5"]).push_back(RegData("SMID", "31:28", 28, 15));
   (regDataMap["shim_dma_bd9_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd9_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_0_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_mm2s_0_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_mm2s_0_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_1_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_mm2s_1_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_mm2s_1_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_0_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_s2mm_0_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_0_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Pause_Mem", "1", 1, 1));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_1_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_s2mm_1_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_1_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_s2mm_current_write_count_0"]).push_back(RegData("Current_Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_current_write_count_1"]).push_back(RegData("Current_Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["shim_demux_config"]).push_back(RegData("South5", "11:10", 10, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South2", "5:4", 4, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South3", "7:6", 6, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South4", "9:8", 8, 3));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "22:16", 16, 127));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "6:0", 0, 127));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["shim_event_broadcast0_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast10_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast11_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast12_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast13_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast14_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast15_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast1_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast2_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast3_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast4_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast5_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast6_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast7_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast8_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast9_a"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_broadcast_a_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Perf_Cnt0", "2", 2, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Perf_Cnt1", "3", 3, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "4", 4, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "5", 5, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "6", 6, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "7", 7, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "8", 8, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "9", 9, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_0", "0", 0, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_1", "1", 1, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_10", "10", 10, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_11", "11", 11, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_12", "12", 12, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_13", "13", 13, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_14", "14", 14, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_15", "15", 15, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_2", "2", 2, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_3", "3", 3, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_4", "4", 4, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_5", "5", 5, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_6", "6", 6, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_7", "7", 7, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_8", "8", 8, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_9", "9", 9, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_start_task", "0", 0, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_start_task", "1", 1, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_finished_task", "10", 10, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_finished_task", "11", 11, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_stream_starvation", "16", 16, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_stream_starvation", "17", 17, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_memory_backpressure", "18", 18, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_memory_backpressure", "19", 19, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_start_task", "2", 2, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_stream_backpressure", "20", 20, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_stream_backpressure", "21", 21, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_memory_starvation", "22", 22, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_memory_starvation", "23", 23, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_start_task", "3", 3, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_finished_BD", "4", 4, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_finished_BD", "5", 5, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_0_finished_BD", "6", 6, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_MM2S_1_finished_BD", "7", 7, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_0_finished_task", "8", 8, 1));
   (regDataMap["shim_event_group_dma_activity_enable"]).push_back(RegData("DMA_S2MM_1_finished_task", "9", 9, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Slave_Tile_Error", "0", 0, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("Control_Pkt_Error", "1", 1, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("Lock_Error", "10", 10, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("DMA_Task_Token_Stall", "11", 11, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "2", 2, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Decode_NSU_Error", "3", 3, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Slave_NSU_Error", "4", 4, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Unsupported_Traffic", "5", 5, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Unsecure_Access_in_Secure_Mode", "6", 6, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Byte_Strobe_Error", "7", 7, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("DMA_S2MM_Error", "8", 8, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("DMA_MM2S_Error", "9", 9, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_eq", "0", 0, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_ge", "1", 1, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_rel", "10", 10, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_equal_to_value", "11", 11, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_eq", "12", 12, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_ge", "13", 13, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_rel", "14", 14, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_equal_to_value", "15", 15, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_eq", "16", 16, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_ge", "17", 17, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_rel", "18", 18, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_equal_to_value", "19", 19, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_rel", "2", 2, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_eq", "20", 20, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_ge", "21", 21, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_rel", "22", 22, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_equal_to_value", "23", 23, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_equal_to_value", "3", 3, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_eq", "4", 4, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_ge", "5", 5, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_rel", "6", 6, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_equal_to_value", "7", 7, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_eq", "8", 8, 1));
   (regDataMap["shim_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_ge", "9", 9, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["shim_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_clear"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_clear"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_disable_a"]).push_back(RegData("Disable_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_disable_b"]).push_back(RegData("Disable_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_enable_a"]).push_back(RegData("Enable_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_enable_b"]).push_back(RegData("Enable_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event1", "14:8", 8, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event2", "22:16", 16, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event3", "30:24", 24, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event0", "6:0", 0, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event1", "14:8", 8, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event2", "22:16", 16, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event3", "30:24", 24, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event0", "6:0", 0, 127));
   (regDataMap["shim_interrupt_controller_1st_level_irq_no_a"]).push_back(RegData("Irq_no_A", "3:0", 0, 15));
   (regDataMap["shim_interrupt_controller_1st_level_irq_no_b"]).push_back(RegData("Irq_no_B", "3:0", 0, 15));
   (regDataMap["shim_interrupt_controller_1st_level_mask_a"]).push_back(RegData("IRQ_Mask_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_mask_b"]).push_back(RegData("IRQ_Mask_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_status_a"]).push_back(RegData("Status_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_status_b"]).push_back(RegData("Status_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_2nd_level_disable"]).push_back(RegData("Disable_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_enable"]).push_back(RegData("Enable_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_interrupt"]).push_back(RegData("NoC_Interrupt", "1:0", 0, 3));
   (regDataMap["shim_interrupt_controller_2nd_level_mask"]).push_back(RegData("IRQ_Mask_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_status"]).push_back(RegData("Status_A", "15:0", 0, 65535));
   (regDataMap["shim_lock0_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock10_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock11_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock12_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock13_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock14_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock15_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock1_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock2_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock3_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock4_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock5_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock6_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock7_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock8_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock9_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock_request"]).push_back(RegData("Request_Result", "0", 0, 1));
   (regDataMap["shim_locks_event_selection_0"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_0"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_1"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_1"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_2"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_2"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_3"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_3"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_4"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_4"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_5"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_5"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_0", "0", 0, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_1", "1", 1, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_10", "10", 10, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_11", "11", 11, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_12", "12", 12, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_13", "13", 13, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_14", "14", 14, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_15", "15", 15, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_2", "2", 2, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_3", "3", 3, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_4", "4", 4, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_5", "5", 5, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_6", "6", 6, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_7", "7", 7, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_8", "8", 8, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_9", "9", 9, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_0", "0", 0, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_1", "1", 1, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_10", "10", 10, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_11", "11", 11, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_12", "12", 12, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_13", "13", 13, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_14", "14", 14, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_15", "15", 15, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_2", "2", 2, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_3", "3", 3, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_4", "4", 4, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_5", "5", 5, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_6", "6", 6, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_7", "7", 7, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_8", "8", 8, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_9", "9", 9, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("Master_Sel", "0", 0, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("Slave_Sel", "1", 1, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("SLVERR_Block", "2", 2, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("DECERR_Block", "3", 3, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("Stream_Switch_Clock_Enable", "0", 0, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("PL_Interface_Clock_Enable", "1", 1, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("CTE_Clock_Enable", "3", 3, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("Stream_Switch_Adaptive_Clock_Gate", "4", 4, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("DMA_Adaptive_Clock_Gate", "5", 5, 1));
   (regDataMap["shim_module_clock_control_1"]).push_back(RegData("NoC_Module_Clock_Enable", "0", 0, 1));
   (regDataMap["shim_module_reset_control_0"]).push_back(RegData("Stream_Switch_Reset", "0", 0, 1));
   (regDataMap["shim_module_reset_control_0"]).push_back(RegData("PL_Interface_Reset", "1", 1, 1));
   (regDataMap["shim_module_reset_control_0"]).push_back(RegData("CTE_Module_Reset", "3", 3, 1));
   (regDataMap["shim_module_reset_control_1"]).push_back(RegData("NoC_Module_Reset", "0", 0, 1));
   (regDataMap["shim_mux_config"]).push_back(RegData("South3", "11:10", 10, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South6", "13:12", 12, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South7", "15:14", 14, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South2", "9:8", 8, 3));
   (regDataMap["shim_noc_interface_me_to_noc_south2"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_noc_interface_me_to_noc_south3"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_noc_interface_me_to_noc_south4"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_noc_interface_me_to_noc_south5"]).push_back(RegData("Tdest", "9:0", 0, 1023));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South2", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South4", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South5", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South6", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South7", "10", 10, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South6_South7_128_combine", "11", 11, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South0_South1_128_combine", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South2", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South3", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South2_South3_128_combine", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South4", "6", 6, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South5", "7", 7, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South4_South5_128_combine", "8", 8, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South6", "9", 9, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South2", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South3", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South4", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South5", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South6", "6", 6, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South7", "7", 7, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South0_South1_128_combine", "2", 2, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South2", "3", 3, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South3", "4", 4, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South2_South3_128_combine", "5", 5, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South4", "6", 6, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South5", "7", 7, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South4_South5_128_combine", "8", 8, 1));
   (regDataMap["shim_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter0_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter1"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter1_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["shim_performance_ctrl1"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["shim_performance_ctrl1"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   (regDataMap["shim_reserved0"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_reserved1"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_reserved2"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_reserved3"]).push_back(RegData("reserved", "31:0", 0, 4294967295));
   (regDataMap["shim_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["shim_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["shim_stream_switch_adaptive_clock_gate_abort_period"]).push_back(RegData("Abort_Period", "3:0", 0, 15));
   (regDataMap["shim_stream_switch_adaptive_clock_gate_status"]).push_back(RegData("Active", "0", 0, 1));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_0", "0", 0, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_1", "1", 1, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_2", "2", 2, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_3", "3", 3, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_4", "4", 4, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_5", "5", 5, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_6", "6", 6, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_7", "7", 7, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("Tile_Control", "8", 8, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("Shim_trace", "9", 9, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_0", "0", 0, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_1", "1", 1, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_2", "2", 2, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_3", "3", 3, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_4", "4", 4, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_5", "5", 5, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("Tile_Control", "6", 6, 1));
   (regDataMap["shim_stream_switch_slave_config_east_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_east_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_east_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_east_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_fifo_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_fifo_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_6"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_6"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_7"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_7"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["shim_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["shim_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["shim_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["shim_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["shim_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["shim_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["shim_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["shim_trace_status"]).push_back(RegData("State", "9:8", 8, 3));

}

/*************************************************************************************
 * AIE2PS Registers
 *************************************************************************************/
void AIE2PSWriterUsedRegisters::populateRegDataMap() {
   regDataMap["cm_accumulator_control"].push_back(RegData("Input", "0", 0, 1));
   (regDataMap["cm_accumulator_control"]).push_back(RegData("Output", "1", 1, 1));
   (regDataMap["cm_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["cm_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["cm_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   // (regDataMap["cm_core_bmhh0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh0_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh0_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh1_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh1_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh2_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh2_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh3_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh3_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh4_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh4_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh5_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh5_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh6_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh6_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh7_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhh7_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl0_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl0_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl1_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl1_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl2_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl2_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl3_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl3_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl4_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl4_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl5_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl5_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl6_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl6_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl7_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmhl7_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh0_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh0_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh1_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh1_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh2_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh2_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh3_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh3_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh4_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh4_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh5_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh5_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh6_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh6_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh7_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmlh7_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll0_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll0_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll1_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll1_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll2_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll2_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll3_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll3_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll4_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll4_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll5_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll5_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll6_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll6_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll7_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_bmll7_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_MAC_Huge_Mask", "10", 10, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("MCD_Enable", "11", 11, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("SCD_Enable", "12", 12, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Bfloat_to_Int_Zero_Mask", "18", 18, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Saturation_Mode", "1:0", 0, 3));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Bfloat_to_Int_Invalid_Mask", "20", 20, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Bfloat_to_Int_Tiny_Mask", "21", 21, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Bfloat_to_Int_Huge_Mask", "22", 22, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_to_Bfloat_Zero_Mask", "23", 23, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_to_Bfloat_Infinity_Mask", "24", 24, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_to_Bfloat_Invalid_Mask", "25", 25, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_to_Bfloat_Tiny_Mask", "26", 26, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_to_Bfloat_Huge_Mask", "27", 27, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("UnpackSize", "28", 28, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("SRS_Mode", "29", 29, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("UPS_Mode", "30", 30, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("PackSize", "31", 31, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Round_Mode", "5:2", 2, 15));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_MAC_Zero_Mask", "6", 6, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_MAC_Infinity_Mask", "7", 7, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_MAC_Invalid_Mask", "8", 8, 1));
   (regDataMap["cm_core_cr1"]).push_back(RegData("Float_MAC_Tiny_Mask", "9", 9, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("Vadd_Sign0", "0", 0, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("Vadd_Sign1", "1", 1, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("BF8_Mode", "17:16", 16, 3));
   (regDataMap["cm_core_cr2"]).push_back(RegData("FP8_Mode", "19:18", 18, 3));
   (regDataMap["cm_core_cr2"]).push_back(RegData("Unpack_Sign0", "2", 2, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("FP_Conv_Sat", "21:20", 20, 3));
   (regDataMap["cm_core_cr2"]).push_back(RegData("Unpack_Sign1", "3", 3, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("Pack_Sign0", "4", 4, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("Pack_Sign1", "5", 5, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("UPS_Sign0", "6", 6, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("UPS_Sign1", "7", 7, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("SRS_Sign0", "8", 8, 1));
   (regDataMap["cm_core_cr2"]).push_back(RegData("SRS_Sign1", "9", 9, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Float_to_Fix_Zero_Mask", "0", 0, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Fix_to_Float_Inexact_Mask", "13", 13, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Zero_Mask", "16", 16, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Infinity_Mask", "17", 17, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Invalid_Mask", "18", 18, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Tiny_Mask", "19", 19, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Float_to_Fix_Invalid_Mask", "2", 2, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Huge_Mask", "20", 20, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Inexact_Mask", "21", 21, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Reserved1_Mask", "22", 22, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Nlf_Reserved2_Mask", "23", 23, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Float_to_Bfp_Invalid_Mask", "26", 26, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Float_to_Fix_Inexact_Mask", "5", 5, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Float_to_Fix_Huge_Mask", "6", 6, 1));
   (regDataMap["cm_core_cr3"]).push_back(RegData("Fix_to_Float_Zero_Mask", "8", 8, 1));
   (regDataMap["cm_core_control"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_control"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["cm_core_dc0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dc7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dj7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_dn7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_eg0"]).push_back(RegData("G0", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg0"]).push_back(RegData("E0", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg1"]).push_back(RegData("G1", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg1"]).push_back(RegData("E1", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg10"]).push_back(RegData("G10", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg10"]).push_back(RegData("E10", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg11"]).push_back(RegData("G11", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg11"]).push_back(RegData("E11", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg2"]).push_back(RegData("G2", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg2"]).push_back(RegData("E2", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg3"]).push_back(RegData("G3", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg3"]).push_back(RegData("E3", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg4"]).push_back(RegData("G4", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg4"]).push_back(RegData("E4", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg5"]).push_back(RegData("G5", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg5"]).push_back(RegData("E5", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg6"]).push_back(RegData("G6", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg6"]).push_back(RegData("E6", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg7"]).push_back(RegData("G7", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg7"]).push_back(RegData("E7", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg8"]).push_back(RegData("G8", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg8"]).push_back(RegData("E8", "63:0", 0, 18446744073709551615));
   (regDataMap["cm_core_eg9"]).push_back(RegData("G9", "127:64", 64, 18446744073709551615));
   (regDataMap["cm_core_eg9"]).push_back(RegData("E9", "63:0", 0, 18446744073709551615));
   // (regDataMap["cm_core_f0"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f10"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f11"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f5"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f6"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f7"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f8"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_f9"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_fc"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   // (regDataMap["cm_core_fifoxtra_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_fifoxtra_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_fifoxtra_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_fifoxtra_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_lc"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_lci"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   // (regDataMap["cm_core_ldfifoh0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifoh0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifoh0_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifoh0_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifoh1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifoh1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifoh1_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifoh1_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol0_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol0_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol1_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_ldfifol1_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_le"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_lr"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_ls"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_m7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p0"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p1"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p2"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p3"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p4"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p5"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p6"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_p7"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_pc"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_processor_bus"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_processor_bus"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["cm_core_r0"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r1"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r10"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r11"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r12"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r13"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r14"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r15"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r16"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r17"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r18"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r19"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r2"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r20"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r21"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r22"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r23"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r24"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r25"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r26"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r27"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r28"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r29"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r3"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r30"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r31"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r4"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r5"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r6"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r7"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r8"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_r9"]).push_back(RegData("Register_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_core_reset_defeature"]).push_back(RegData("Core_Reset_Defeature", "0", 0, 1));
   (regDataMap["cm_core_s0"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_s1"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_s2"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_s3"]).push_back(RegData("Register_Value", "5:0", 0, 63));
   (regDataMap["cm_core_sp"]).push_back(RegData("Register_Value", "19:0", 0, 1048575));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Carry", "0", 0, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("SS0_Success", "1", 1, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_MAC_Tiny_Flag", "10", 10, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_MAC_Huge_Flag", "11", 11, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Bfloat_to_Int_Zero_Flag", "12", 12, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Bfloat_to_Int_Invalid_Flag", "14", 14, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Bfloat_to_Int_Tiny_Flag", "15", 15, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Bfloat_to_Int_Huge_Flag", "16", 16, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_to_Bfloat_Zero_Flag", "17", 17, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_to_Bfloat_Infinity_Flag", "18", 18, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_to_Bfloat_Invalid_Flag", "19", 19, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("SS0_Tlast", "2", 2, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_to_Bfloat_Tiny_Flag", "20", 20, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_to_Bfloat_Huge_Flag", "21", 21, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Sparse_Overflow", "22", 22, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Fifo_Overflow", "23", 23, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Fifo_Underflow", "24", 24, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_to_Bfp_Invalid_Flag", "27", 27, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("MS0_Success", "3", 3, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("SRS_Overflow", "4", 4, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("UPS_Overflow", "5", 5, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_MAC_Zero_Flag", "7", 7, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_MAC_Infinity_Flag", "8", 8, 1));
   (regDataMap["cm_core_sr1"]).push_back(RegData("Float_MAC_Invalid_Flag", "9", 9, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Float_to_Fix_Zero_Flag", "0", 0, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Fix_to_Float_Inexact_Flag", "13", 13, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Zero_Flag", "16", 16, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Infinity_Flag", "17", 17, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Invalid_Flag", "18", 18, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Tiny_Flag", "19", 19, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Float_to_Fix_Invalid_Flag", "2", 2, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Huge_Flag", "20", 20, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Inexact_Flag", "21", 21, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Reserved1_Flag", "22", 22, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Nlf_Reserved2_Flag", "23", 23, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Float_to_Fix_Inexact_Flag", "5", 5, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Float_to_Fix_Huge_Flag", "6", 6, 1));
   (regDataMap["cm_core_sr2"]).push_back(RegData("Fix_to_Float_Zero_Flag", "8", 8, 1));
   // (regDataMap["cm_core_stfifoh_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_stfifoh_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_stfifoh_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_stfifoh_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_stfifol_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_stfifol_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_stfifol_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_stfifol_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_core_status"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_SS0", "10", 10, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Stream_Stall_MS0", "12", 12, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Cascade_Stall_SCD", "14", 14, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Cascade_Stall_MCD", "15", 15, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Debug_Halt", "16", 16, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("ECC_Error_Stall", "17", 17, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("ECC_Scrubbing_Stall", "18", 18, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Error_Halt", "19", 19, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_S", "2", 2, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Core_Done", "20", 20, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Core_Processor_Bus_Stall", "21", 21, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_W", "3", 3, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_N", "4", 4, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Memory_Stall_E", "5", 5, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_S", "6", 6, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_W", "7", 7, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_N", "8", 8, 1));
   (regDataMap["cm_core_status"]).push_back(RegData("Lock_Stall_E", "9", 9, 1));
   // (regDataMap["cm_core_x0_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x0_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x0_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x0_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x10_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x10_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x10_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x10_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x11_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x11_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x11_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x11_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x1_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x1_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x1_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x1_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x2_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x2_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x2_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x2_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x3_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x3_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x3_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x3_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x4_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x4_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x4_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x4_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x5_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x5_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x5_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x5_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x6_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x6_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x6_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x6_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x7_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x7_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x7_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x7_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x8_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x8_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x8_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x8_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x9_part1"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x9_part2"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x9_part3"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   // (regDataMap["cm_core_x9_part4"]).push_back(RegData("Register_Value", "127:0", 0, 340282366920938463463374607431768211455));
   (regDataMap["cm_debug_control0"]).push_back(RegData("Debug_Halt_Bit", "0", 0, 1));
   (regDataMap["cm_debug_control0"]).push_back(RegData("Single_Step_Count", "5:2", 2, 15));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_SingleStep_Core_Event", "14:8", 8, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Halt_Core_Event0", "22:16", 16, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Halt_Core_Event1", "30:24", 24, 127));
   (regDataMap["cm_debug_control1"]).push_back(RegData("Debug_Resume_Core_Event", "6:0", 0, 127));
   (regDataMap["cm_debug_control2"]).push_back(RegData("PC_Event_Halt", "0", 0, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Memory_Stall_Halt", "1", 1, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Lock_Stall_Halt", "2", 2, 1));
   (regDataMap["cm_debug_control2"]).push_back(RegData("Stream_Stall_Halt", "3", 3, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_halted", "0", 0, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("PC_Event_halted", "1", 1, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Memory_Stall_Halted", "2", 2, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Lock_Stall_Halted", "3", 3, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Stream_stall_Halted", "4", 4, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_Event0_Halted", "5", 5, 1));
   (regDataMap["cm_debug_status"]).push_back(RegData("Debug_Event1_Halted", "6", 6, 1));
   (regDataMap["cm_ecc_control"]).push_back(RegData("Stall_Core_Control", "0", 0, 1));
   (regDataMap["cm_ecc_control"]).push_back(RegData("Unstall_Core", "1", 1, 1));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "13:0", 0, 16383));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("Access_Type", "14", 14, 1));
   (regDataMap["cm_ecc_failing_address"]).push_back(RegData("Clear_failing_address", "15", 15, 1));
   (regDataMap["cm_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_number", "6:0", 0, 127));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "22:16", 16, 127));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "6:0", 0, 127));
   (regDataMap["cm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["cm_enable_events"]).push_back(RegData("Disable_Event", "14:8", 8, 127));
   (regDataMap["cm_enable_events"]).push_back(RegData("Disable_Event_occurred", "15", 15, 1));
   (regDataMap["cm_enable_events"]).push_back(RegData("Enable_Event", "6:0", 0, 127));
   (regDataMap["cm_enable_events"]).push_back(RegData("Enable_Event_occurred", "7", 7, 1));
   (regDataMap["cm_error_halt_control"]).push_back(RegData("Error_Halt", "0", 0, 1));
   (regDataMap["cm_error_halt_event"]).push_back(RegData("Error_Halt_Core_Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast0"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast1"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast10"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast11"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast12"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast13"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast14"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast15"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast2"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast3"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast4"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast5"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast6"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast7"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast8"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast9"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_broadcast_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["cm_event_broadcast_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["cm_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "10", 10, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "11", 11, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt0", "2", 2, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt1", "3", 3, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt2", "4", 4, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Perf_Cnt3", "5", 5, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "6", 6, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "7", 7, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "8", 8, 1));
   (regDataMap["cm_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "9", 9, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_0", "0", 0, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_1", "1", 1, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_10", "10", 10, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_11", "11", 11, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_12", "12", 12, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_13", "13", 13, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_14", "14", 14, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_15", "15", 15, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_2", "2", 2, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_3", "3", 3, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_4", "4", 4, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_5", "5", 5, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_6", "6", 6, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_7", "7", 7, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_8", "8", 8, 1));
   (regDataMap["cm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_9", "9", 9, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Event_0", "0", 0, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Event_1", "1", 1, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Cascade_Put", "10", 10, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Lock_Acquire_req", "11", 11, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Lock_Release_req", "12", 12, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Call", "2", 2, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Return", "3", 3, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Vector", "4", 4, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Load", "5", 5, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Store", "6", 6, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Stream_Get", "7", 7, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Stream_Put", "8", 8, 1));
   (regDataMap["cm_event_group_core_program_flow_enable"]).push_back(RegData("Instr_Cascade_Get", "9", 9, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Memory_Stall", "0", 0, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Stream_Stall", "1", 1, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Cascade_Stall", "2", 2, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Lock_Stall", "3", 3, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Debug", "4", 4, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Active", "5", 5, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("Disable", "6", 6, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("ECC_Scrubbing_Stall", "7", 7, 1));
   (regDataMap["cm_event_group_core_stall_enable"]).push_back(RegData("ECC_Error_Stall", "8", 8, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("SRS_Overflow", "0", 0, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("UPS_Overflow", "1", 1, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("AXI_MM_Slave_Error", "10", 10, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instruction_Decompression_Error", "11", 11, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("DM_address_out_of_range", "12", 12, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_Scrub_Corrected", "13", 13, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_Scrub_2bit", "14", 14, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_1bit", "15", 15, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_ECC_Error_2bit", "16", 16, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_address_out_of_range", "17", 17, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("DM_access_to_Unavailable", "18", 18, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Lock_Access_to_Unavailable", "19", 19, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Huge", "2", 2, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instr_Warning", "20", 20, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Instr_Error", "21", 21, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Sparsity_Overflow", "22", 22, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "23", 23, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Processor_Bus_Error", "24", 24, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Int_FP_Zero", "3", 3, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_Invalid", "4", 4, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("FP_INF", "5", 5, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("reserved0", "6", 6, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("PM_Reg_Access_Failure", "7", 7, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "8", 8, 1));
   (regDataMap["cm_event_group_errors0_enable"]).push_back(RegData("Control_Pkt_Error", "9", 9, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("SRS_Overflow", "0", 0, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("UPS_Overflow", "1", 1, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("AXI_MM_Slave_Error", "10", 10, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instruction_Decompression_Error", "11", 11, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("DM_address_out_of_range", "12", 12, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_Scrub_Corrected", "13", 13, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_Scrub_2bit", "14", 14, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_1bit", "15", 15, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_ECC_Error_2bit", "16", 16, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_address_out_of_range", "17", 17, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("DM_access_to_Unavailable", "18", 18, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Lock_Access_to_Unavailable", "19", 19, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Huge", "2", 2, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instr_Warning", "20", 20, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Instr_Error", "21", 21, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Decompression_underflow", "22", 22, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "23", 23, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Processor_Bus_Error", "24", 24, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Int_FP_Zero", "3", 3, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_Invalid", "4", 4, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("FP_INF", "5", 5, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("reserved0", "6", 6, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("PM_Reg_Access_Failure", "7", 7, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "8", 8, 1));
   (regDataMap["cm_event_group_errors1_enable"]).push_back(RegData("Control_Pkt_Error", "9", 9, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_0", "0", 0, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_1", "1", 1, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_2", "2", 2, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_3", "3", 3, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_Range_0_1", "4", 4, 1));
   (regDataMap["cm_event_group_pc_enable"]).push_back(RegData("PC_Range_2_3", "5", 5, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["cm_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_2", "2", 2, 1));
   (regDataMap["cm_event_group_user_event_enable"]).push_back(RegData("User_Event_3", "3", 3, 1));
   (regDataMap["cm_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["cm_memory_control"]).push_back(RegData("Memory_Zeroisation", "0", 0, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Stream_Switch_Clock_Enable", "0", 0, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Memory_Module_Clock_Enable", "1", 1, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Core_Module_Clock_Enable", "2", 2, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("Ctrl_Pkt_Tlast_Error_Enable", "4", 4, 1));
   (regDataMap["cm_module_clock_control"]).push_back(RegData("DMA_Adaptive_Clock_Gate", "5", 5, 1));
   (regDataMap["cm_module_reset_control"]).push_back(RegData("Stream_Switch_Reset", "0", 0, 1));
   (regDataMap["cm_module_reset_control"]).push_back(RegData("Memory_Module_Reset", "1", 1, 1));
   (regDataMap["cm_module_reset_control"]).push_back(RegData("Core_Module_Reset", "2", 2, 1));
   (regDataMap["cm_pc_event0"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event1"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event2"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event2"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_pc_event3"]).push_back(RegData("PC_Address", "13:0", 0, 16383));
   (regDataMap["cm_pc_event3"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_control0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt2_Stop_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt3_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt3_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_control1"]).push_back(RegData("Cnt2_Start_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt2_Reset_Event", "22:16", 16, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt3_Reset_Event", "30:24", 24, 127));
   (regDataMap["cm_performance_control2"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   (regDataMap["cm_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter0_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter1"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter1_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter2"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter2_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter3"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_performance_counter3_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["cm_reset_event"]).push_back(RegData("Reset_Event", "6:0", 0, 127));
   (regDataMap["cm_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["cm_spare_reg_privileged"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["cm_stream_switch_adaptive_clock_gate_abort_period"]).push_back(RegData("Abort_Period", "3:0", 0, 15));
   (regDataMap["cm_stream_switch_adaptive_clock_gate_status"]).push_back(RegData("Active", "0", 0, 1));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["cm_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["cm_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_aie_core0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_dma0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_dma1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_east3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_fifo0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["cm_stream_switch_master_config_west3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Core_lower", "0", 0, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("DMA_0_lower", "1", 1, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Core_upper", "16", 16, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("DMA_0_upper", "17", 17, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("DMA_1_upper", "18", 18, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Tile_Control_upper", "19", 19, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("DMA_1_lower", "2", 2, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("AIE_Trace_upper", "20", 20, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Mem_trace_upper", "21", 21, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Tile_Control_lower", "3", 3, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("AIE_Trace_lower", "4", 4, 1));
   (regDataMap["cm_stream_switch_parity_injection"]).push_back(RegData("Mem_trace_lower", "5", 5, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("Core", "0", 0, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("DMA_0", "1", 1, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("DMA_1", "2", 2, 1));
   (regDataMap["cm_stream_switch_parity_status"]).push_back(RegData("Tile_Control", "3", 3, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_core0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_aie_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_core0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_core0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_aie_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_dma_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_east_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_east_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_fifo_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_fifo_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_mem_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_mem_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_north_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_north_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_south_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_south_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_config_west_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["cm_stream_switch_slave_config_west_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_dma_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_east_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_mem_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["cm_stream_switch_slave_west_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["cm_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("First_Header_Parity_Error", "0", 0, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("Second_Header_Parity_Error", "1", 1, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["cm_tile_control_packet_handler_status"]).push_back(RegData("Tlast_Error", "3", 3, 1));
   (regDataMap["cm_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["cm_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["cm_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["cm_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Mode", "1:0", 0, 3));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["cm_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["cm_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["cm_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["cm_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["cm_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["cm_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["cm_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane0", "0", 0, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane1", "1", 1, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane2", "2", 2, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane3", "3", 3, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane4", "4", 4, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane5", "5", 5, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane6", "6", 6, 1));
   (regDataMap["mm_checkbit_error_generation"]).push_back(RegData("Lane7", "7", 7, 1));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["mm_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventB", "14:8", 8, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventC", "22:16", 16, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventD", "30:24", 24, 127));
   (regDataMap["mm_combo_event_inputs"]).push_back(RegData("eventA", "6:0", 0, 127));
   (regDataMap["mm_dma_bd0_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd0_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd0_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd0_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd0_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd0_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd0_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd0_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd0_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd0_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd10_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd10_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd10_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd10_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd10_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd10_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd10_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd10_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd10_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd10_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd11_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd11_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd11_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd11_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd11_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd11_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd11_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd11_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd11_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd11_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd12_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd12_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd12_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd12_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd12_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd12_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd12_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd12_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd12_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd12_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd13_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd13_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd13_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd13_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd13_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd13_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd13_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd13_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd13_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd13_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd14_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd14_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd14_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd14_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd14_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd14_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd14_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd14_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd14_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd14_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd15_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd15_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd15_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd15_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd15_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd15_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd15_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd15_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd15_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd15_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd1_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd1_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd1_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd1_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd1_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd1_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd1_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd1_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd1_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd1_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd2_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd2_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd2_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd2_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd2_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd2_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd2_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd2_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd2_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd2_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd3_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd3_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd3_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd3_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd3_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd3_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd3_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd3_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd3_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd3_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd4_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd4_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd4_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd4_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd4_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd4_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd4_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd4_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd4_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd4_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd5_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd5_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd5_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd5_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd5_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd5_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd5_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd5_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd5_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd5_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd6_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd6_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd6_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd6_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd6_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd6_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd6_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd6_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd6_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd6_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd7_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd7_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd7_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd7_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd7_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd7_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd7_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd7_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd7_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd7_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd8_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd8_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd8_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd8_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd8_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd8_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd8_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd8_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd8_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd8_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_bd9_0"]).push_back(RegData("Buffer_Length", "13:0", 0, 16383));
   (regDataMap["mm_dma_bd9_0"]).push_back(RegData("Base_Address", "27:14", 14, 16383));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["mm_dma_bd9_1"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mm_dma_bd9_2"]).push_back(RegData("D0_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_2"]).push_back(RegData("D1_Stepsize", "25:13", 13, 8191));
   (regDataMap["mm_dma_bd9_3"]).push_back(RegData("D2_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_3"]).push_back(RegData("D0_Wrap", "20:13", 13, 255));
   (regDataMap["mm_dma_bd9_3"]).push_back(RegData("D1_Wrap", "28:21", 21, 255));
   (regDataMap["mm_dma_bd9_4"]).push_back(RegData("Iteration_Stepsize", "12:0", 0, 8191));
   (regDataMap["mm_dma_bd9_4"]).push_back(RegData("Iteration_Wrap", "18:13", 13, 63));
   (regDataMap["mm_dma_bd9_4"]).push_back(RegData("Iteration_Current", "24:19", 19, 63));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mm_dma_bd9_5"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_mm2s_0_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_mm2s_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_mm2s_0_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_mm2s_1_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_mm2s_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_mm2s_1_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_status_0"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mm_dma_mm2s_status_1"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_0_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_s2mm_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_0_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_1_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mm_dma_s2mm_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_1_start_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["mm_dma_s2mm_current_write_count_0"]).push_back(RegData("Current_Write_Count", "13:0", 0, 16383));
   (regDataMap["mm_dma_s2mm_current_write_count_1"]).push_back(RegData("Current_Write_Count", "13:0", 0, 16383));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mm_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_status_0"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mm_dma_s2mm_status_1"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mm_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "13:0", 0, 16383));
   (regDataMap["mm_ecc_failing_address"]).push_back(RegData("Valid", "15", 15, 1));
   (regDataMap["mm_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_number", "6:0", 0, 127));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "22:16", 16, 127));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "6:0", 0, 127));
   (regDataMap["mm_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["mm_event_broadcast0"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast1"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast10"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast11"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast12"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast13"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast14"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast15"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast2"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast3"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast4"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast5"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast6"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast7"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast8"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast9"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_broadcast_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mm_event_broadcast_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mm_event_generate"]).push_back(RegData("Event", "6:0", 0, 127));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Perf_Cnt0_Event", "2", 2, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Perf_Cnt1_Event", "3", 3, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "4", 4, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "5", 5, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "6", 6, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "7", 7, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "8", 8, 1));
   (regDataMap["mm_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "9", 9, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_0", "0", 0, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_1", "1", 1, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_10", "10", 10, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_11", "11", 11, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_12", "12", 12, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_13", "13", 13, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_14", "14", 14, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_15", "15", 15, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_2", "2", 2, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_3", "3", 3, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_4", "4", 4, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_5", "5", 5, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_6", "6", 6, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_7", "7", 7, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_8", "8", 8, 1));
   (regDataMap["mm_event_group_broadcast_enable"]).push_back(RegData("Broadcast_9", "9", 9, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_start_task", "0", 0, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_start_task", "1", 1, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_finished_task", "10", 10, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_finished_task", "11", 11, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_stream_starvation", "16", 16, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_stream_starvation", "17", 17, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_memory_backpressure", "18", 18, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_memory_backpressure", "19", 19, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_start_task", "2", 2, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_stream_backpressure", "20", 20, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_stream_backpressure", "21", 21, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_memory_starvation", "22", 22, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_memory_starvation", "23", 23, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_start_task", "3", 3, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_finished_BD", "4", 4, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_finished_BD", "5", 5, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_0_finished_BD", "6", 6, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_1_finished_BD", "7", 7, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_0_finished_task", "8", 8, 1));
   (regDataMap["mm_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_1_finished_task", "9", 9, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_Corrected", "0", 0, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_2bit", "1", 1, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_S2MM_0_Error", "10", 10, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_S2MM_1_Error", "11", 11, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_MM2S_0_Error", "12", 12, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_MM2S_1_Error", "13", 13, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("Lock_Error", "14", 14, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DMA_Task_Token_Stall", "15", 15, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_1bit", "2", 2, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_2bit", "3", 3, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_2", "4", 4, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_3", "5", 5, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_4", "6", 6, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_5", "7", 7, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_6", "8", 8, 1));
   (regDataMap["mm_event_group_error_enable"]).push_back(RegData("DM_Parity_Error_Bank_7", "9", 9, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_eq", "0", 0, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_ge", "1", 1, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_rel", "10", 10, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_equal_to_value", "11", 11, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_eq", "12", 12, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_ge", "13", 13, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_rel", "14", 14, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_equal_to_value", "15", 15, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_eq", "16", 16, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_ge", "17", 17, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_rel", "18", 18, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_equal_to_value", "19", 19, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_rel", "2", 2, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_eq", "20", 20, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_ge", "21", 21, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_rel", "22", 22, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_equal_to_value", "23", 23, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_eq", "24", 24, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_ge", "25", 25, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_rel", "26", 26, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_equal_to_value", "27", 27, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_eq", "28", 28, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_ge", "29", 29, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_equal_to_value", "3", 3, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_rel", "30", 30, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_equal_to_value", "31", 31, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_eq", "4", 4, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_ge", "5", 5, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_rel", "6", 6, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_equal_to_value", "7", 7, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_eq", "8", 8, 1));
   (regDataMap["mm_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_ge", "9", 9, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_0", "0", 0, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_1", "1", 1, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_2", "2", 2, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_3", "3", 3, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_4", "4", 4, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_5", "5", 5, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_6", "6", 6, 1));
   (regDataMap["mm_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_7", "7", 7, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_2", "2", 2, 1));
   (regDataMap["mm_event_group_user_event_enable"]).push_back(RegData("User_Event_3", "3", 3, 1));
   (regDataMap["mm_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_0", "0", 0, 1));
   (regDataMap["mm_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_1", "1", 1, 1));
   (regDataMap["mm_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["mm_lock0_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock10_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock11_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock12_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock13_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock14_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock15_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock1_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock2_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock3_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock4_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock5_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock6_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock7_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock8_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock9_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mm_lock_request"]).push_back(RegData("Request_Result", "0", 0, 1));
   (regDataMap["mm_locks_event_selection_0"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_0"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_1"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_1"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_2"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_2"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_3"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_3"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_4"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_4"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_5"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_5"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_6"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_6"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_event_selection_7"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["mm_locks_event_selection_7"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_0", "0", 0, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_1", "1", 1, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_10", "10", 10, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_11", "11", 11, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_12", "12", 12, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_13", "13", 13, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_14", "14", 14, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_15", "15", 15, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_2", "2", 2, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_3", "3", 3, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_4", "4", 4, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_5", "5", 5, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_6", "6", 6, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_7", "7", 7, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_8", "8", 8, 1));
   (regDataMap["mm_locks_overflow"]).push_back(RegData("Lock_Overflow_9", "9", 9, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_0", "0", 0, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_1", "1", 1, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_10", "10", 10, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_11", "11", 11, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_12", "12", 12, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_13", "13", 13, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_14", "14", 14, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_15", "15", 15, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_2", "2", 2, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_3", "3", 3, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_4", "4", 4, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_5", "5", 5, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_6", "6", 6, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_7", "7", 7, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_8", "8", 8, 1));
   (regDataMap["mm_locks_underflow"]).push_back(RegData("Lock_Underflow_9", "9", 9, 1));
   (regDataMap["mm_memory_control"]).push_back(RegData("Memory_Zeroisation", "0", 0, 1));
   (regDataMap["mm_parity_failing_address"]).push_back(RegData("Parity_Error_Detection_Address", "15:0", 0, 65535));
   (regDataMap["mm_parity_failing_address"]).push_back(RegData("Valid", "16", 16, 1));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt0_Stop_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt1_Start_Event", "22:16", 16, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt1_Stop_Event", "30:24", 24, 127));
   (regDataMap["mm_performance_control0"]).push_back(RegData("Cnt0_Start_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_control1"]).push_back(RegData("Cnt1_Reset_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control1"]).push_back(RegData("Cnt0_Reset_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_control2"]).push_back(RegData("Cnt2_Stop_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control2"]).push_back(RegData("Cnt3_Start_Event", "22:16", 16, 127));
   (regDataMap["mm_performance_control2"]).push_back(RegData("Cnt3_Stop_Event", "30:24", 24, 127));
   (regDataMap["mm_performance_control2"]).push_back(RegData("Cnt2_Start_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_control3"]).push_back(RegData("Cnt3_Reset_Event", "14:8", 8, 127));
   (regDataMap["mm_performance_control3"]).push_back(RegData("Cnt2_Reset_Event", "6:0", 0, 127));
   (regDataMap["mm_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter0_event_value"]).push_back(RegData("Counter0_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter1"]).push_back(RegData("Counter1_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter1_event_value"]).push_back(RegData("Counter1_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter2"]).push_back(RegData("Counter2_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_performance_counter3"]).push_back(RegData("Counter3_Value", "31:0", 0, 4294967295));
   (regDataMap["mm_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["mm_timer_control"]).push_back(RegData("Reset_Event", "14:8", 8, 127));
   (regDataMap["mm_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["mm_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["mm_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["mm_trace_control0"]).push_back(RegData("Trace_Start_Event", "22:16", 16, 127));
   (regDataMap["mm_trace_control0"]).push_back(RegData("Trace_Stop_Event", "30:24", 24, 127));
   (regDataMap["mm_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mm_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event1", "14:8", 8, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event2", "22:16", 16, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event3", "30:24", 24, 127));
   (regDataMap["mm_trace_event0"]).push_back(RegData("Trace_Event0", "6:0", 0, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event5", "14:8", 8, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event6", "22:16", 16, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event7", "30:24", 24, 127));
   (regDataMap["mm_trace_event1"]).push_back(RegData("Trace_Event4", "6:0", 0, 127));
   (regDataMap["mm_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["mm_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Address", "10:0", 0, 2047));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("WriteStrobeMask", "23:16", 16, 255));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("South_Access", "24", 24, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("West_Access", "25", 25, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("North_Access", "26", 26, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("East_Access", "27", 27, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("DMA_Access", "28", 28, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("AXI_Access", "29", 29, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Write_Access", "30", 30, 1));
   (regDataMap["mm_watchpoint0"]).push_back(RegData("Read_Access", "31", 31, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Address", "10:0", 0, 2047));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("WriteStrobeMask", "23:16", 16, 255));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("South_Access", "24", 24, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("West_Access", "25", 25, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("North_Access", "26", 26, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("East_Access", "27", 27, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("DMA_Access", "28", 28, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("AXI_Access", "29", 29, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Write_Access", "30", 30, 1));
   (regDataMap["mm_watchpoint1"]).push_back(RegData("Read_Access", "31", 31, 1));
   (regDataMap["mem_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane0", "0", 0, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane1", "1", 1, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane2", "2", 2, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane3", "3", 3, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane4", "4", 4, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane5", "5", 5, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane6", "6", 6, 1));
   (regDataMap["mem_checkbit_error_generation"]).push_back(RegData("Lane7", "7", 7, 1));
   (regDataMap["mem_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["mem_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["mem_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventB", "15:8", 8, 255));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventC", "23:16", 16, 255));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventD", "31:24", 24, 255));
   (regDataMap["mem_combo_event_inputs"]).push_back(RegData("eventA", "7:0", 0, 255));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd0_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd0_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd0_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd0_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd0_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd0_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd0_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd0_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd0_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd10_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd10_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd10_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd10_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd10_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd10_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd10_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd10_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd10_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd11_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd11_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd11_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd11_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd11_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd11_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd11_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd11_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd11_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd12_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd12_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd12_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd12_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd12_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd12_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd12_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd12_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd12_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd13_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd13_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd13_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd13_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd13_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd13_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd13_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd13_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd13_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd14_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd14_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd14_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd14_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd14_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd14_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd14_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd14_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd14_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd15_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd15_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd15_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd15_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd15_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd15_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd15_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd15_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd15_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd16_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd16_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd16_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd16_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd16_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd16_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd16_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd16_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd16_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd17_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd17_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd17_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd17_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd17_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd17_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd17_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd17_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd17_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd18_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd18_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd18_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd18_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd18_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd18_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd18_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd18_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd18_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd19_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd19_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd19_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd19_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd19_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd19_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd19_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd19_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd19_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd1_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd1_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd1_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd1_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd1_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd1_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd1_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd1_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd1_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd20_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd20_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd20_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd20_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd20_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd20_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd20_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd20_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd20_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd21_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd21_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd21_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd21_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd21_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd21_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd21_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd21_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd21_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd22_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd22_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd22_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd22_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd22_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd22_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd22_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd22_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd22_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd23_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd23_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd23_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd23_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd23_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd23_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd23_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd23_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd23_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd24_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd24_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd24_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd24_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd24_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd24_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd24_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd24_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd24_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd25_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd25_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd25_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd25_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd25_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd25_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd25_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd25_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd25_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd26_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd26_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd26_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd26_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd26_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd26_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd26_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd26_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd26_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd27_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd27_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd27_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd27_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd27_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd27_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd27_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd27_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd27_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd28_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd28_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd28_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd28_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd28_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd28_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd28_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd28_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd28_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd29_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd29_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd29_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd29_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd29_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd29_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd29_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd29_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd29_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd2_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd2_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd2_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd2_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd2_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd2_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd2_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd2_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd2_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd30_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd30_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd30_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd30_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd30_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd30_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd30_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd30_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd30_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd31_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd31_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd31_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd31_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd31_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd31_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd31_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd31_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd31_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd32_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd32_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd32_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd32_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd32_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd32_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd32_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd32_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd32_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd33_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd33_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd33_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd33_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd33_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd33_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd33_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd33_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd33_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd34_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd34_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd34_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd34_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd34_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd34_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd34_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd34_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd34_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd35_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd35_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd35_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd35_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd35_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd35_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd35_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd35_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd35_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd36_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd36_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd36_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd36_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd36_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd36_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd36_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd36_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd36_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd37_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd37_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd37_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd37_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd37_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd37_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd37_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd37_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd37_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd38_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd38_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd38_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd38_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd38_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd38_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd38_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd38_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd38_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd39_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd39_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd39_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd39_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd39_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd39_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd39_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd39_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd39_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd3_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd3_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd3_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd3_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd3_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd3_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd3_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd3_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd3_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd40_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd40_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd40_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd40_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd40_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd40_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd40_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd40_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd40_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd41_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd41_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd41_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd41_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd41_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd41_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd41_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd41_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd41_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd42_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd42_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd42_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd42_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd42_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd42_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd42_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd42_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd42_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd43_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd43_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd43_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd43_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd43_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd43_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd43_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd43_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd43_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd44_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd44_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd44_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd44_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd44_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd44_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd44_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd44_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd44_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd45_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd45_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd45_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd45_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd45_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd45_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd45_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd45_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd45_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd46_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd46_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd46_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd46_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd46_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd46_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd46_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd46_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd46_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd47_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd47_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd47_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd47_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd47_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd47_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd47_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd47_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd47_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd4_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd4_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd4_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd4_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd4_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd4_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd4_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd4_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd4_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd5_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd5_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd5_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd5_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd5_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd5_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd5_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd5_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd5_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd6_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd6_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd6_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd6_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd6_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd6_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd6_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd6_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd6_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd7_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd7_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd7_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd7_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd7_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd7_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd7_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd7_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd7_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd8_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd8_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd8_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd8_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd8_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd8_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd8_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd8_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd8_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Buffer_Length", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Out_Of_Order_BD_ID", "22:17", 17, 63));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Packet_ID", "27:23", 23, 31));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Packet_Type", "30:28", 28, 7));
   (regDataMap["mem_dma_bd9_0"]).push_back(RegData("Enable_Packet", "31", 31, 1));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("Base_Address", "18:0", 0, 524287));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("Use_Next_BD", "19", 19, 1));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("Next_BD", "25:20", 20, 63));
   (regDataMap["mem_dma_bd9_1"]).push_back(RegData("D0_Pad_Before", "31:26", 26, 63));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("D0_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("D0_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("D1_Pad_Before_High", "27", 27, 1));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("D2_Pad_Before_High", "29:28", 28, 3));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("D3_Stepsize_Zero", "30", 30, 1));
   (regDataMap["mem_dma_bd9_2"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["mem_dma_bd9_3"]).push_back(RegData("D1_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_3"]).push_back(RegData("D1_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd9_3"]).push_back(RegData("D1_Pad_Before", "31:27", 27, 31));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("D2_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("D2_Wrap", "26:17", 17, 1023));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("D2_Pad_Before", "30:27", 27, 15));
   (regDataMap["mem_dma_bd9_4"]).push_back(RegData("Enable_Compression", "31", 31, 1));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D3_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D0_Pad_After", "22:17", 17, 63));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D1_Pad_After", "27:23", 23, 31));
   (regDataMap["mem_dma_bd9_5"]).push_back(RegData("D2_Pad_After", "31:28", 28, 15));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("Iteration_Stepsize", "16:0", 0, 131071));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("Iteration_Wrap", "22:17", 17, 63));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("Iteration_Current", "28:23", 23, 63));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("D1_Pad_After_High", "29", 29, 1));
   (regDataMap["mem_dma_bd9_6"]).push_back(RegData("D2_Pad_After_High", "31:30", 30, 3));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Acq_Value", "14:8", 8, 127));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Acq_Enable", "15", 15, 1));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Rel_ID", "23:16", 16, 255));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Rel_Value", "30:24", 24, 127));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Valid_BD", "31", 31, 1));
   (regDataMap["mem_dma_bd9_7"]).push_back(RegData("Lock_Acq_ID", "7:0", 0, 255));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("S2MM_Sel1_Channel", "10:8", 8, 7));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("MM2S_Sel0_Channel", "18:16", 16, 7));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("MM2S_Sel1_Channel", "26:24", 24, 7));
   (regDataMap["mem_dma_event_channel_selection"]).push_back(RegData("S2MM_Sel0_Channel", "2:0", 0, 7));
   (regDataMap["mem_dma_mm2s_0_constant_pad_value"]).push_back(RegData("Constant_Pad_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_dma_mm2s_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_0_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_0_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_1_constant_pad_value"]).push_back(RegData("Constant_Pad_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_dma_mm2s_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_1_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_1_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_2_constant_pad_value"]).push_back(RegData("Constant_Pad_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_dma_mm2s_2_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_2_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_2_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_2_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_2_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_2_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_3_constant_pad_value"]).push_back(RegData("Constant_Pad_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_dma_mm2s_3_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_3_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_3_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_3_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_3_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_3_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_4_constant_pad_value"]).push_back(RegData("Constant_Pad_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_dma_mm2s_4_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_4_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_4_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_4_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_4_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_4_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_5_constant_pad_value"]).push_back(RegData("Constant_Pad_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_dma_mm2s_5_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_mm2s_5_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_mm2s_5_ctrl"]).push_back(RegData("Compression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_5_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_mm2s_5_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_mm2s_5_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_0"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_1"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_2"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_3"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_4"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_mm2s_status_5"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_0_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_0_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_0_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_0_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_1_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_1_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_1_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_1_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_2_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_2_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_2_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_2_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_3_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_3_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_3_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_3_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_4_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_4_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_4_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_4_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Reset", "1", 1, 1));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_5_ctrl"]).push_back(RegData("Decompression_Enable", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_5_start_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["mem_dma_s2mm_5_start_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_5_start_queue"]).push_back(RegData("Start_BD_ID", "5:0", 0, 63));
   (regDataMap["mem_dma_s2mm_current_write_count_0"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_1"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_2"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_3"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_4"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_current_write_count_5"]).push_back(RegData("Current_Write_Count", "16:0", 0, 131071));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_2"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_3"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_4"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["mem_dma_s2mm_fot_count_fifo_pop_5"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_0"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_1"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_2"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_3"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_4"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Cur_BD", "29:24", 24, 63));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_Lock_Access_to_Unavailable", "8", 8, 1));
   (regDataMap["mem_dma_s2mm_status_5"]).push_back(RegData("Error_DM_Access_to_Unavailable", "9", 9, 1));
   (regDataMap["mem_ecc_failing_address"]).push_back(RegData("ECC_Error_Detection_Address", "18:0", 0, 524287));
   (regDataMap["mem_ecc_failing_address"]).push_back(RegData("Valid", "19", 19, 1));
   (regDataMap["mem_ecc_scrubbing_event"]).push_back(RegData("Scrubbing_Event_Number", "7:0", 0, 255));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "23:16", 16, 255));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "7:0", 0, 255));
   (regDataMap["mem_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["mem_event_broadcast0"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast1"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast10"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast11"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast12"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast13"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast14"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast15"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast2"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast3"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast4"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast5"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast6"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast7"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast8"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast9"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_broadcast_a_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_a_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["mem_event_broadcast_b_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["mem_event_generate"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "10", 10, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "11", 11, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt0_Event", "2", 2, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt1_Event", "3", 3, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt2_Event", "4", 4, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Perf_Cnt3_Event", "5", 5, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "6", 6, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "7", 7, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "8", 8, 1));
   (regDataMap["mem_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "9", 9, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_0", "0", 0, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_1", "1", 1, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_10", "10", 10, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_11", "11", 11, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_12", "12", 12, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_13", "13", 13, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_14", "14", 14, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_15", "15", 15, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_2", "2", 2, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_3", "3", 3, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_4", "4", 4, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_5", "5", 5, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_6", "6", 6, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_7", "7", 7, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_8", "8", 8, 1));
   (regDataMap["mem_event_group_broadcast_enable"]).push_back(RegData("Broadcast_A_9", "9", 9, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_start_task", "0", 0, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_start_task", "1", 1, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_finished_task", "10", 10, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_finished_task", "11", 11, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_stream_starvation", "16", 16, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_stream_starvation", "17", 17, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_stream_backpressure", "18", 18, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_stream_backpressure", "19", 19, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_start_task", "2", 2, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_memory_backpressure", "20", 20, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_memory_backpressure", "21", 21, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_memory_starvation", "22", 22, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_memory_starvation", "23", 23, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_start_task", "3", 3, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_finished_BD", "4", 4, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_finished_BD", "5", 5, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel0_finished_BD", "6", 6, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_MM2S_Sel1_finished_BD", "7", 7, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel0_finished_task", "8", 8, 1));
   (regDataMap["mem_event_group_dma_enable"]).push_back(RegData("DMA_S2MM_Sel1_finished_task", "9", 9, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_Corrected", "0", 0, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_Scrub_2bit", "1", 1, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Lock_Error", "10", 10, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DMA_Task_Token_Stall", "11", 11, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_1bit", "2", 2, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DM_ECC_Error_2bit", "3", 3, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DMA_S2MM_Error", "4", 4, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("DMA_MM2S_Error", "5", 5, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "6", 6, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Stream_Pkt_Parity_Error", "7", 7, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("Control_Pkt_Error", "8", 8, 1));
   (regDataMap["mem_event_group_error_enable"]).push_back(RegData("AXI_MM_Slave_Error", "9", 9, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_eq", "0", 0, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_acq_ge", "1", 1, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_rel", "10", 10, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_equal_to_value", "11", 11, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_eq", "12", 12, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_acq_ge", "13", 13, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_rel", "14", 14, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel3_equal_to_value", "15", 15, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_eq", "16", 16, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_acq_ge", "17", 17, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_rel", "18", 18, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel4_equal_to_value", "19", 19, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_rel", "2", 2, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_eq", "20", 20, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_acq_ge", "21", 21, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_rel", "22", 22, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel5_equal_to_value", "23", 23, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_eq", "24", 24, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_acq_ge", "25", 25, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_rel", "26", 26, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel6_equal_to_value", "27", 27, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_eq", "28", 28, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_acq_ge", "29", 29, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel0_equal_to_value", "3", 3, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_rel", "30", 30, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel7_equal_to_value", "31", 31, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_eq", "4", 4, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_acq_ge", "5", 5, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_rel", "6", 6, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel1_equal_to_value", "7", 7, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_eq", "8", 8, 1));
   (regDataMap["mem_event_group_lock_enable"]).push_back(RegData("Lock_Sel2_acq_ge", "9", 9, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_0", "0", 0, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_1", "1", 1, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_2", "2", 2, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_3", "3", 3, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_4", "4", 4, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_5", "5", 5, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_6", "6", 6, 1));
   (regDataMap["mem_event_group_memory_conflict_enable"]).push_back(RegData("Conflict_DM_Bank_7", "7", 7, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["mem_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["mem_event_group_user_event_enable"]).push_back(RegData("User_Event_0", "0", 0, 1));
   (regDataMap["mem_event_group_user_event_enable"]).push_back(RegData("User_Event_1", "1", 1, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_0", "0", 0, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_1", "1", 1, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_2", "2", 2, 1));
   (regDataMap["mem_event_group_watchpoint_enable"]).push_back(RegData("Watchpoint_3", "3", 3, 1));
   (regDataMap["mem_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status4"]).push_back(RegData("Event_159_128_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_event_status5"]).push_back(RegData("Event_191_160_Status", "31:0", 0, 4294967295));
   (regDataMap["mem_lock0_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock10_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock11_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock12_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock13_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock14_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock15_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock16_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock17_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock18_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock19_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock1_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock20_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock21_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock22_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock23_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock24_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock25_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock26_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock27_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock28_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock29_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock2_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock30_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock31_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock32_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock33_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock34_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock35_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock36_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock37_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock38_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock39_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock3_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock40_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock41_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock42_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock43_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock44_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock45_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock46_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock47_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock48_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock49_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock4_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock50_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock51_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock52_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock53_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock54_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock55_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock56_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock57_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock58_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock59_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock5_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock60_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock61_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock62_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock63_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock6_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock7_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock8_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock9_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["mem_lock_request"]).push_back(RegData("Request_Result", "0", 0, 1));
   (regDataMap["mem_locks_event_selection_0"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_0"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_1"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_1"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_2"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_2"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_3"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_3"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_4"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_4"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_5"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_5"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_6"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_6"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_event_selection_7"]).push_back(RegData("Lock_Select", "21:16", 16, 63));
   (regDataMap["mem_locks_event_selection_7"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_0", "0", 0, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_1", "1", 1, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_10", "10", 10, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_11", "11", 11, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_12", "12", 12, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_13", "13", 13, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_14", "14", 14, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_15", "15", 15, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_16", "16", 16, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_17", "17", 17, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_18", "18", 18, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_19", "19", 19, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_2", "2", 2, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_20", "20", 20, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_21", "21", 21, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_22", "22", 22, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_23", "23", 23, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_24", "24", 24, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_25", "25", 25, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_26", "26", 26, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_27", "27", 27, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_28", "28", 28, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_29", "29", 29, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_3", "3", 3, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_30", "30", 30, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_31", "31", 31, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_4", "4", 4, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_5", "5", 5, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_6", "6", 6, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_7", "7", 7, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_8", "8", 8, 1));
   (regDataMap["mem_locks_overflow_0"]).push_back(RegData("Lock_Overflow_9", "9", 9, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_32", "0", 0, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_33", "1", 1, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_42", "10", 10, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_43", "11", 11, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_44", "12", 12, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_45", "13", 13, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_46", "14", 14, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_47", "15", 15, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_48", "16", 16, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_49", "17", 17, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_50", "18", 18, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_51", "19", 19, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_34", "2", 2, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_52", "20", 20, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_53", "21", 21, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_54", "22", 22, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_55", "23", 23, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_56", "24", 24, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_57", "25", 25, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_58", "26", 26, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_59", "27", 27, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_60", "28", 28, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_61", "29", 29, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_35", "3", 3, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_62", "30", 30, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_63", "31", 31, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_36", "4", 4, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_37", "5", 5, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_38", "6", 6, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_39", "7", 7, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_40", "8", 8, 1));
   (regDataMap["mem_locks_overflow_1"]).push_back(RegData("Lock_Overflow_41", "9", 9, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_0", "0", 0, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_1", "1", 1, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_10", "10", 10, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_11", "11", 11, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_12", "12", 12, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_13", "13", 13, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_14", "14", 14, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_15", "15", 15, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_16", "16", 16, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_17", "17", 17, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_18", "18", 18, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_19", "19", 19, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_2", "2", 2, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_20", "20", 20, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_21", "21", 21, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_22", "22", 22, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_23", "23", 23, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_24", "24", 24, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_25", "25", 25, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_26", "26", 26, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_27", "27", 27, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_28", "28", 28, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_29", "29", 29, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_3", "3", 3, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_30", "30", 30, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_31", "31", 31, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_4", "4", 4, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_5", "5", 5, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_6", "6", 6, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_7", "7", 7, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_8", "8", 8, 1));
   (regDataMap["mem_locks_underflow_0"]).push_back(RegData("Lock_Underflow_9", "9", 9, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_32", "0", 0, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_33", "1", 1, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_42", "10", 10, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_43", "11", 11, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_44", "12", 12, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_45", "13", 13, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_46", "14", 14, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_47", "15", 15, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_48", "16", 16, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_49", "17", 17, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_50", "18", 18, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_51", "19", 19, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_34", "2", 2, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_52", "20", 20, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_53", "21", 21, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_54", "22", 22, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_55", "23", 23, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_56", "24", 24, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_57", "25", 25, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_58", "26", 26, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_59", "27", 27, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_60", "28", 28, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_61", "29", 29, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_35", "3", 3, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_62", "30", 30, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_63", "31", 31, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_36", "4", 4, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_37", "5", 5, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_38", "6", 6, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_39", "7", 7, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_40", "8", 8, 1));
   (regDataMap["mem_locks_underflow_1"]).push_back(RegData("Lock_Underflow_41", "9", 9, 1));
   (regDataMap["mem_memory_control"]).push_back(RegData("Memory_Zeroisation", "0", 0, 1));
   (regDataMap["mem_memory_control"]).push_back(RegData("Memory_Interleaving", "1", 1, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("Stream_Switch_Clock_Enable", "0", 0, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("Memory_Module_Clock_Enable", "1", 1, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("Ctrl_Pkt_Tlast_Error_Enable", "4", 4, 1));
   (regDataMap["mem_module_clock_control"]).push_back(RegData("DMA_Adaptive_Clock_Gate", "5", 5, 1));
   (regDataMap["mem_module_reset_control"]).push_back(RegData("Stream_Switch_Reset", "0", 0, 1));
   (regDataMap["mem_module_reset_control"]).push_back(RegData("Memory_Reset", "1", 1, 1));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt0_Stop_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt1_Start_Event", "23:16", 16, 255));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt1_Stop_Event", "31:24", 24, 255));
   (regDataMap["mem_performance_control0"]).push_back(RegData("Cnt0_Start_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt2_Stop_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt3_Start_Event", "23:16", 16, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt3_Stop_Event", "31:24", 24, 255));
   (regDataMap["mem_performance_control1"]).push_back(RegData("Cnt2_Start_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt1_Reset_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt2_Reset_Event", "23:16", 16, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt3_Reset_Event", "31:24", 24, 255));
   (regDataMap["mem_performance_control2"]).push_back(RegData("Cnt0_Reset_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_control3"]).push_back(RegData("Cnt4_Stop_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control3"]).push_back(RegData("Cnt5_Start_Event", "23:16", 16, 255));
   (regDataMap["mem_performance_control3"]).push_back(RegData("Cnt5_Stop_Event", "31:24", 24, 255));
   (regDataMap["mem_performance_control3"]).push_back(RegData("Cnt4_Start_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_control4"]).push_back(RegData("Cnt5_Reset_Event", "15:8", 8, 255));
   (regDataMap["mem_performance_control4"]).push_back(RegData("Cnt4_Reset_Event", "7:0", 0, 255));
   (regDataMap["mem_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter0_event_value"]).push_back(RegData("Counter0_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter1"]).push_back(RegData("Counter1_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter1_event_value"]).push_back(RegData("Counter1_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter2"]).push_back(RegData("Counter2_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter2_event_value"]).push_back(RegData("Counter2_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter3"]).push_back(RegData("Counter3_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter3_event_value"]).push_back(RegData("Counter3_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter4"]).push_back(RegData("Counter4_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_performance_counter5"]).push_back(RegData("Counter5_Value", "31:0", 0, 4294967295));
   (regDataMap["mem_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["mem_spare_reg_privileged"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["mem_stream_switch_adaptive_clock_gate_abort_period"]).push_back(RegData("Abort_Period", "3:0", 0, 15));
   (regDataMap["mem_stream_switch_adaptive_clock_gate_status"]).push_back(RegData("Active", "0", 0, 1));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["mem_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["mem_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_dma5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["mem_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_0_lower", "0", 0, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_1_lower", "1", 1, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_0_upper", "16", 16, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_1_upper", "17", 17, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_2_upper", "18", 18, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_3_upper", "19", 19, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_2_lower", "2", 2, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_4_upper", "20", 20, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_5_upper", "21", 21, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("Tile_Control_upper", "22", 22, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("Mem_trace_upper", "23", 23, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_3_lower", "3", 3, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_4_lower", "4", 4, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("DMA_5_lower", "5", 5, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("Tile_Control_lower", "6", 6, 1));
   (regDataMap["mem_stream_switch_parity_injection"]).push_back(RegData("Mem_trace_lower", "7", 7, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_0", "0", 0, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_1", "1", 1, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_2", "2", 2, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_3", "3", 3, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_4", "4", 4, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("DMA_5", "5", 5, 1));
   (regDataMap["mem_stream_switch_parity_status"]).push_back(RegData("Tile_Control", "6", 6, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_dma_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_north_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_north_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_south_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_south_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_config_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["mem_stream_switch_slave_config_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_dma_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["mem_stream_switch_slave_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["mem_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("First_Header_Parity_Error", "0", 0, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("Second_Header_Parity_Error", "1", 1, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["mem_tile_control_packet_handler_status"]).push_back(RegData("Tlast_Error", "3", 3, 1));
   (regDataMap["mem_timer_control"]).push_back(RegData("Reset_Event", "15:8", 8, 255));
   (regDataMap["mem_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["mem_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["mem_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["mem_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["mem_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["mem_trace_control0"]).push_back(RegData("Trace_Start_Event", "23:16", 16, 255));
   (regDataMap["mem_trace_control0"]).push_back(RegData("Trace_Stop_Event", "31:24", 24, 255));
   (regDataMap["mem_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["mem_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event1", "15:8", 8, 255));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event2", "23:16", 16, 255));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event3", "31:24", 24, 255));
   (regDataMap["mem_trace_event0"]).push_back(RegData("Trace_Event0", "7:0", 0, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event5", "15:8", 8, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event6", "23:16", 16, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event7", "31:24", 24, 255));
   (regDataMap["mem_trace_event1"]).push_back(RegData("Trace_Event4", "7:0", 0, 255));
   (regDataMap["mem_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["mem_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("Address", "13:0", 0, 16383));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("WriteStrobeMask", "23:16", 16, 255));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint0"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("Address", "13:0", 0, 16383));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("WriteStrobeMask", "23:16", 16, 255));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint1"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("Address", "13:0", 0, 16383));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("WriteStrobeMask", "23:16", 16, 255));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint2"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("Address", "13:0", 0, 16383));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("WriteStrobeMask", "23:16", 16, 255));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("West_Access", "24", 24, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("East_Access", "25", 25, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("DMA_Access", "26", 26, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("AXI_Access", "27", 27, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("Write_Access", "28", 28, 1));
   (regDataMap["mem_watchpoint3"]).push_back(RegData("Read_Access", "29", 29, 1));
   (regDataMap["shim_axi_mm_outstanding_transactions"]).push_back(RegData("NoC_Module_To_NMU", "0", 0, 1));
   (regDataMap["shim_bisr_cache_ctrl"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["shim_bisr_cache_ctrl"]).push_back(RegData("Clear", "4", 4, 1));
   (regDataMap["shim_bisr_cache_data0"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data1"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data2"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data3"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data4"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data5"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data6"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_data7"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_cache_status"]).push_back(RegData("Done", "0", 0, 1));
   (regDataMap["shim_bisr_cache_status"]).push_back(RegData("Pass", "1", 1, 1));
   (regDataMap["shim_bisr_test_data0"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data1"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data2"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data3"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data4"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data5"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data6"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_bisr_test_data7"]).push_back(RegData("Data", "31:0", 0, 4294967295));
   (regDataMap["shim_cssd_trigger"]).push_back(RegData("Trigger", "0", 0, 1));
   (regDataMap["shim_column_clock_control"]).push_back(RegData("Clock_Buffer_Enable", "0", 0, 1));
   (regDataMap["shim_column_clock_control"]).push_back(RegData("Column_SRAMs_Sleep", "1", 1, 1));
   (regDataMap["shim_column_reset_control"]).push_back(RegData("Reset", "0", 0, 1));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo2", "17:16", 16, 3));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo0", "1:0", 0, 3));
   (regDataMap["shim_combo_event_control"]).push_back(RegData("combo1", "9:8", 8, 3));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventB", "15:8", 8, 255));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventC", "23:16", 16, 255));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventD", "31:24", 24, 255));
   (regDataMap["shim_combo_event_inputs"]).push_back(RegData("eventA", "7:0", 0, 255));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("First_Header_Parity_Error", "0", 0, 1));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("Second_Header_Parity_Error", "1", 1, 1));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("SLVERR_On_Access", "2", 2, 1));
   (regDataMap["shim_control_packet_handler_status"]).push_back(RegData("Tlast_Error", "3", 3, 1));
   (regDataMap["shim_core_control"]).push_back(RegData("Wakeup", "0", 0, 1));
   (regDataMap["shim_core_control"]).push_back(RegData("Go_To_Sleep", "1", 1, 1));
   (regDataMap["shim_core_interrupt_status"]).push_back(RegData("Go_To_Sleep", "0", 0, 1));
   (regDataMap["shim_core_interrupt_status"]).push_back(RegData("Event_Action", "1", 1, 1));
   (regDataMap["shim_core_status"]).push_back(RegData("Sleep", "0", 0, 1));
   (regDataMap["shim_core_status"]).push_back(RegData("Interrupt", "1", 1, 1));
   (regDataMap["shim_dma_bd0_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd0_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd0_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd0_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd0_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd0_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd0_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd0_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd0_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd0_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd0_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd0_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd0_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd0_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd10_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd10_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd10_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd10_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd10_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd10_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd10_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd10_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd10_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd10_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd10_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd10_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd10_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd10_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd11_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd11_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd11_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd11_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd11_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd11_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd11_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd11_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd11_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd11_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd11_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd11_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd11_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd11_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd12_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd12_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd12_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd12_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd12_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd12_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd12_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd12_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd12_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd12_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd12_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd12_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd12_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd12_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd13_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd13_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd13_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd13_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd13_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd13_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd13_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd13_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd13_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd13_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd13_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd13_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd13_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd13_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd14_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd14_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd14_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd14_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd14_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd14_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd14_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd14_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd14_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd14_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd14_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd14_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd14_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd14_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd15_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd15_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd15_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd15_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd15_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd15_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd15_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd15_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd15_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd15_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd15_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd15_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd15_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd15_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd1_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd1_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd1_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd1_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd1_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd1_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd1_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd1_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd1_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd1_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd1_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd1_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd1_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd1_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd2_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd2_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd2_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd2_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd2_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd2_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd2_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd2_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd2_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd2_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd2_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd2_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd2_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd2_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd3_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd3_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd3_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd3_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd3_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd3_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd3_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd3_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd3_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd3_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd3_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd3_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd3_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd3_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd4_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd4_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd4_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd4_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd4_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd4_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd4_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd4_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd4_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd4_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd4_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd4_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd4_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd4_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd5_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd5_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd5_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd5_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd5_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd5_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd5_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd5_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd5_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd5_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd5_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd5_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd5_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd5_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd6_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd6_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd6_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd6_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd6_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd6_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd6_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd6_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd6_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd6_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd6_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd6_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd6_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd6_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd7_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd7_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd7_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd7_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd7_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd7_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd7_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd7_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd7_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd7_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd7_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd7_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd7_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd7_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd8_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd8_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd8_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd8_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd8_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd8_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd8_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd8_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd8_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd8_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd8_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd8_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd8_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd8_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_bd9_0"]).push_back(RegData("Buffer_Length", "31:0", 0, 4294967295));
   (regDataMap["shim_dma_bd9_1"]).push_back(RegData("Base_Address_Low", "31:2", 2, 1073741823));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Base_Address_High", "15:0", 0, 65535));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Packet_Type", "18:16", 16, 7));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Packet_ID", "23:19", 19, 31));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Out_Of_Order_BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_bd9_2"]).push_back(RegData("Enable_Packet", "30", 30, 1));
   (regDataMap["shim_dma_bd9_3"]).push_back(RegData("D0_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_3"]).push_back(RegData("D0_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd9_3"]).push_back(RegData("Secure_Access", "30", 30, 1));
   (regDataMap["shim_dma_bd9_4"]).push_back(RegData("D1_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_4"]).push_back(RegData("D1_Wrap", "29:20", 20, 1023));
   (regDataMap["shim_dma_bd9_4"]).push_back(RegData("Burst_Length", "31:30", 30, 3));
   (regDataMap["shim_dma_bd9_5"]).push_back(RegData("D2_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_5"]).push_back(RegData("AxQoS", "23:20", 20, 15));
   (regDataMap["shim_dma_bd9_5"]).push_back(RegData("AxCache", "27:24", 24, 15));
   (regDataMap["shim_dma_bd9_6"]).push_back(RegData("Iteration_Stepsize", "19:0", 0, 1048575));
   (regDataMap["shim_dma_bd9_6"]).push_back(RegData("Iteration_Wrap", "25:20", 20, 63));
   (regDataMap["shim_dma_bd9_6"]).push_back(RegData("Iteration_Current", "31:26", 26, 63));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Acq_Value", "11:5", 5, 127));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Acq_Enable", "12", 12, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Rel_ID", "16:13", 13, 15));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Rel_Value", "24:18", 18, 127));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Valid_BD", "25", 25, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Use_Next_BD", "26", 26, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Next_BD", "30:27", 27, 15));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("TLAST_Suppress", "31", 31, 1));
   (regDataMap["shim_dma_bd9_7"]).push_back(RegData("Lock_Acq_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_bd9_8"]).push_back(RegData("Base_Address_56_48", "8:0", 0, 511));
   (regDataMap["shim_dma_dm2mm_axi_control"]).push_back(RegData("AxQOS", "3:0", 0, 15));
   (regDataMap["shim_dma_dm2mm_axi_control"]).push_back(RegData("AxCACHE", "7:4", 4, 15));
   (regDataMap["shim_dma_dm2mm_axi_control"]).push_back(RegData("Burst_Length", "9:8", 8, 3));
   (regDataMap["shim_dma_dm2mm_control"]).push_back(RegData("Reset", "0", 0, 1));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("Running", "0", 0, 1));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("Error_BD_Invalid", "1", 1, 1));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("Task_Queue_Size", "12:8", 8, 31));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("Error_Local_address_out_of_range", "2", 2, 1));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("Response_Queue_Size", "20:16", 16, 31));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("AXI_MM_SLVERR", "3", 3, 1));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("AXI_MM_DECERR", "4", 4, 1));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("Error_ECC_DED", "5", 5, 1));
   (regDataMap["shim_dma_dm2mm_status"]).push_back(RegData("Task_Queue_Overflow", "6", 6, 1));
   (regDataMap["shim_dma_mm2dm_axi_control"]).push_back(RegData("AxQOS", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2dm_axi_control"]).push_back(RegData("AxCACHE", "7:4", 4, 15));
   (regDataMap["shim_dma_mm2dm_axi_control"]).push_back(RegData("Burst_Length", "9:8", 8, 3));
   (regDataMap["shim_dma_mm2dm_control"]).push_back(RegData("Reset", "0", 0, 1));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("Running", "0", 0, 1));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("Error_BD_Invalid", "1", 1, 1));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("Task_Queue_Size", "12:8", 8, 31));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("Error_Local_address_out_of_range", "2", 2, 1));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("Response_Queue_Size", "20:16", 16, 31));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("AXI_MM_SLVERR", "3", 3, 1));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("AXI_MM_DECERR", "4", 4, 1));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("Error_ECC_DED", "5", 5, 1));
   (regDataMap["shim_dma_mm2dm_status"]).push_back(RegData("Task_Queue_Overflow", "6", 6, 1));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_mm2s_0_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_0_response_fifo_parity_error_injection"]).push_back(RegData("Parity_Injection", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_0_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_mm2s_0_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_mm2s_0_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_mm2s_1_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_1_response_fifo_parity_error_injection"]).push_back(RegData("Parity_Injection", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_1_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_mm2s_1_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_mm2s_1_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Task_Queue_Size", "24:20", 20, 31));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Cur_BD", "28:25", 25, 15));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["shim_dma_mm2s_status_0"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Task_Queue_Size", "24:20", 20, 31));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Cur_BD", "28:25", 25, 15));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_Stream_Backpressure", "4", 4, 1));
   (regDataMap["shim_dma_mm2s_status_1"]).push_back(RegData("Stalled_TCT", "5", 5, 1));
   (regDataMap["shim_dma_pause"]).push_back(RegData("S2MM_0", "0", 0, 1));
   (regDataMap["shim_dma_pause"]).push_back(RegData("S2MM_1", "1", 1, 1));
   (regDataMap["shim_dma_pause"]).push_back(RegData("MM2S_0", "2", 2, 1));
   (regDataMap["shim_dma_pause"]).push_back(RegData("MM2S_1", "3", 3, 1));
   (regDataMap["shim_dma_pause"]).push_back(RegData("DM2MM", "0", 0, 1));
   (regDataMap["shim_dma_pause"]).push_back(RegData("MM2DM", "1", 1, 1));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_0_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_0_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_s2mm_0_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_0_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Controller_ID", "15:8", 8, 255));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("FoT_Mode", "17:16", 16, 3));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Pause_Stream", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_1_ctrl"]).push_back(RegData("Enable_Out_of_Order", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_1_task_queue"]).push_back(RegData("Repeat_Count", "23:16", 16, 255));
   (regDataMap["shim_dma_s2mm_1_task_queue"]).push_back(RegData("Enable_Token_Issue", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_1_task_queue"]).push_back(RegData("Start_BD_ID", "3:0", 0, 15));
   (regDataMap["shim_dma_s2mm_current_write_count_0"]).push_back(RegData("Current_Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_current_write_count_1"]).push_back(RegData("Current_Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_0"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Write_Count", "17:0", 0, 262143));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("BD_ID", "29:24", 24, 63));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Last_in_Task", "30", 30, 1));
   (regDataMap["shim_dma_s2mm_fot_count_fifo_pop_1"]).push_back(RegData("Valid", "31", 31, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["shim_dma_s2mm_status_0"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Unavailable", "10", 10, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_BD_Invalid", "11", 11, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_Length_Exceeded", "12", 12, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Error_FoT_BDs_per_Task", "13", 13, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("AXI_MM_Decode_Error", "16", 16, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("AXI_MM_Slave_Error", "17", 17, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Overflow", "18", 18, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Channel_Running", "19", 19, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Status", "1:0", 0, 3));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Acq", "2", 2, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Task_Queue_Size", "22:20", 20, 7));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Cur_BD", "27:24", 24, 15));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_Lock_Rel", "3", 3, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_Stream_Starvation", "4", 4, 1));
   (regDataMap["shim_dma_s2mm_status_1"]).push_back(RegData("Stalled_TCT_or_Count_FIFO_Full", "5", 5, 1));
   (regDataMap["shim_demux_config"]).push_back(RegData("South5", "11:10", 10, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South1", "3:2", 2, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South2", "5:4", 4, 3));
   (regDataMap["shim_demux_config"]).push_back(RegData("South3", "7:6", 6, 3));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Falling", "10", 10, 1));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_1", "23:16", 16, 255));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Rising", "25", 25, 1));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_1_Trigger_Falling", "26", 26, 1));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_Event_0", "7:0", 0, 255));
   (regDataMap["shim_edge_detection_event_control"]).push_back(RegData("Edge_Detection_0_Trigger_Rising", "9", 9, 1));
   (regDataMap["shim_event_broadcast0_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast10_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast11_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast12_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast13_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast14_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast15_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast1_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast2_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast3_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast4_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast5_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast6_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast7_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast8_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast9_a"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_broadcast_a_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_a_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_east_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_north_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_south_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_clr"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_event_broadcast_b_block_west_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_event_generate"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Timer_Sync", "0", 0, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Timer_Value_Reached", "1", 1, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Perf_Cnt0", "2", 2, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Perf_Cnt1", "3", 3, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_0", "4", 4, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_1", "5", 5, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_2", "6", 6, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Combo_Event_3", "7", 7, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_0", "8", 8, 1));
   (regDataMap["shim_event_group_0_enable"]).push_back(RegData("Edge_Detection_Event_1", "9", 9, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_0", "0", 0, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_1", "1", 1, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_10", "10", 10, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_11", "11", 11, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_12", "12", 12, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_13", "13", 13, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_14", "14", 14, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_15", "15", 15, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_2", "2", 2, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_3", "3", 3, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_4", "4", 4, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_5", "5", 5, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_6", "6", 6, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_7", "7", 7, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_8", "8", 8, 1));
   (regDataMap["shim_event_group_broadcast_a_enable"]).push_back(RegData("Broadcast_A_9", "9", 9, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Slave_Tile_Error", "0", 0, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("Control_Pkt_Error", "1", 1, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_0_DMA_MM2S_Error", "10", 10, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_1_DMA_MM2S_Error", "11", 11, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_0_Lock_Error", "12", 12, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_1_Lock_Error", "13", 13, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_0_DMA_Task_Token_Stall", "14", 14, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_1_DMA_Task_Token_Stall", "15", 15, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_0_DMA_HW_Error", "16", 16, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_1_DMA_HW_Error", "17", 17, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("Stream_Switch_Port_Parity_Error", "2", 2, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Decode_NSU_Error", "3", 3, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Slave_NSU_Error", "4", 4, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Unsupported_Traffic", "5", 5, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Unsecure_Access_in_Secure_Mode", "6", 6, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("AXI_MM_Byte_Strobe_Error", "7", 7, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_0_DMA_S2MM_Error", "8", 8, 1));
   (regDataMap["shim_event_group_errors_enable"]).push_back(RegData("NoC_1_DMA_S2MM_Error", "9", 9, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_0_start_task", "0", 0, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_1_start_task", "1", 1, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_0_finished_task", "10", 10, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_1_finished_task", "11", 11, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_0_stream_starvation", "16", 16, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_1_stream_starvation", "17", 17, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_0_memory_backpressure", "18", 18, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_1_memory_backpressure", "19", 19, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_0_start_task", "2", 2, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_0_stream_backpressure", "20", 20, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_1_stream_backpressure", "21", 21, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_0_memory_starvation", "22", 22, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_1_memory_starvation", "23", 23, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_1_start_task", "3", 3, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_0_finished_BD", "4", 4, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_1_finished_BD", "5", 5, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_0_finished_BD", "6", 6, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_MM2S_1_finished_BD", "7", 7, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_0_finished_task", "8", 8, 1));
   (regDataMap["shim_event_group_noc_0_dma_activity_enable"]).push_back(RegData("NoC_0_DMA_S2MM_1_finished_task", "9", 9, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel0_acq_eq", "0", 0, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel0_acq_ge", "1", 1, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel2_rel", "10", 10, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel2_equal_to_value", "11", 11, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel3_acq_eq", "12", 12, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel3_acq_ge", "13", 13, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel3_rel", "14", 14, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel3_equal_to_value", "15", 15, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel4_acq_eq", "16", 16, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel4_acq_ge", "17", 17, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel4_rel", "18", 18, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel4_equal_to_value", "19", 19, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel0_rel", "2", 2, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel5_acq_eq", "20", 20, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel5_acq_ge", "21", 21, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel5_rel", "22", 22, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel5_equal_to_value", "23", 23, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel0_equal_to_value", "3", 3, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel1_acq_eq", "4", 4, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel1_acq_ge", "5", 5, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel1_rel", "6", 6, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel1_equal_to_value", "7", 7, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel2_acq_eq", "8", 8, 1));
   (regDataMap["shim_event_group_noc_0_lock_enable"]).push_back(RegData("NoC_0_Lock_Sel2_acq_ge", "9", 9, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_0_start_task", "0", 0, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_1_start_task", "1", 1, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_0_finished_task", "10", 10, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_1_finished_task", "11", 11, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_0_stalled_lock_acquire", "12", 12, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_1_stalled_lock_acquire", "13", 13, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_0_stalled_lock_acquire", "14", 14, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_1_stalled_lock_acquire", "15", 15, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_0_stream_starvation", "16", 16, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_1_stream_starvation", "17", 17, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_0_memory_backpressure", "18", 18, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_1_memory_backpressure", "19", 19, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_0_start_task", "2", 2, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_0_stream_backpressure", "20", 20, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_1_stream_backpressure", "21", 21, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_0_memory_starvation", "22", 22, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_1_memory_starvation", "23", 23, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_1_start_task", "3", 3, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_0_finished_BD", "4", 4, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_1_finished_BD", "5", 5, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_0_finished_BD", "6", 6, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_MM2S_1_finished_BD", "7", 7, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_0_finished_task", "8", 8, 1));
   (regDataMap["shim_event_group_noc_1_dma_activity_enable"]).push_back(RegData("NoC_1_DMA_S2MM_1_finished_task", "9", 9, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel0_acq_eq", "0", 0, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel0_acq_ge", "1", 1, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel2_rel", "10", 10, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel2_equal_to_value", "11", 11, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel3_acq_eq", "12", 12, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel3_acq_ge", "13", 13, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel3_rel", "14", 14, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel3_equal_to_value", "15", 15, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel4_acq_eq", "16", 16, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel4_acq_ge", "17", 17, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel4_rel", "18", 18, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel4_equal_to_value", "19", 19, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel0_rel", "2", 2, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel5_acq_eq", "20", 20, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel5_acq_ge", "21", 21, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel5_rel", "22", 22, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel5_equal_to_value", "23", 23, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel0_equal_to_value", "3", 3, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel1_acq_eq", "4", 4, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel1_acq_ge", "5", 5, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel1_rel", "6", 6, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel1_equal_to_value", "7", 7, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel2_acq_eq", "8", 8, 1));
   (regDataMap["shim_event_group_noc_1_lock_enable"]).push_back(RegData("NoC_1_Lock_Sel2_acq_ge", "9", 9, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_0", "0", 0, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_0", "1", 1, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_2", "10", 10, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_2", "11", 11, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_3", "12", 12, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_3", "13", 13, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_3", "14", 14, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_3", "15", 15, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_4", "16", 16, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_4", "17", 17, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_4", "18", 18, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_4", "19", 19, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_0", "2", 2, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_5", "20", 20, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_5", "21", 21, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_5", "22", 22, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_5", "23", 23, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_6", "24", 24, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_6", "25", 25, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_6", "26", 26, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_6", "27", 27, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_7", "28", 28, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_7", "29", 29, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_0", "3", 3, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_7", "30", 30, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_7", "31", 31, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_1", "4", 4, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_1", "5", 5, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Stalled_1", "6", 6, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_TLAST_1", "7", 7, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Idle_2", "8", 8, 1));
   (regDataMap["shim_event_group_stream_switch_enable"]).push_back(RegData("Port_Running_2", "9", 9, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Sleep", "0", 0, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Interrupt", "1", 1, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Jump_Taken", "10", 10, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Jump_Hit", "11", 11, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Data_Read", "12", 12, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Data_Write", "13", 13, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Pipeline_Halted_Debug", "14", 14, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Stream_Get", "15", 15, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Stream_Put", "16", 16, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Debug_Sys_Rst", "2", 2, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Debug_Wakeup", "3", 3, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Timer1_Interrupt", "4", 4, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Timer2_Interrupt", "5", 5, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Timer3_Interrupt", "6", 6, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Timer4_Interrupt", "7", 7, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Reg_Write", "8", 8, 1));
   (regDataMap["shim_event_group_uc_core_program_flow_enable"]).push_back(RegData("uC_Core_Exception_Taken", "9", 9, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Master_Idle", "0", 0, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Master_Running", "1", 1, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Master_Stalled", "2", 2, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Master_TLAST", "3", 3, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Slave_Idle", "4", 4, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Slave_Running", "5", 5, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Slave_Stalled", "6", 6, 1));
   (regDataMap["shim_event_group_uc_core_streams_enable"]).push_back(RegData("AXIS_Slave_TLAST", "7", 7, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_DM2MM_start_task", "0", 0, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_MM2DM_start_task", "1", 1, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_DM2MM_finished_BD", "2", 2, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_MM2DM_finished_BD", "3", 3, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_DM2MM_finished_task", "4", 4, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_MM2DM_finished_task", "5", 5, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_DM2MM_local_memory_starvation", "6", 6, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_DM2MM_remote_memory_backpressure", "7", 7, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_MM2DM_local_memory_backpressure", "8", 8, 1));
   (regDataMap["shim_event_group_uc_dma_activity_enable"]).push_back(RegData("DMA_MM2DM_remote_memory_starvation", "9", 9, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("AXI_MM_uC_Core_Master_Decode_Error", "0", 0, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("AXI_MM_uC_DMA_Master_Decode_Error", "1", 1, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("Shared_DM_ECC_Error_1bit", "10", 10, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("Shared_DM_ECC_Error_2bit", "11", 11, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("AXI_MM_uC_Core_Master_Slave_Error", "2", 2, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("AXI_MM_uC_DMA_Master_Slave_Error", "3", 3, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("DMA_DM2MM_Error", "4", 4, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("DMA_MM2DM_Error", "5", 5, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("PM_ECC_Error_1bit", "6", 6, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("PM_ECC_Error_2bit", "7", 7, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("Private_DM_ECC_Error_1bit", "8", 8, 1));
   (regDataMap["shim_event_group_uc_module_errors_enable"]).push_back(RegData("Private_DM_ECC_Error_2bit", "9", 9, 1));
   (regDataMap["shim_event_status0"]).push_back(RegData("Event_31_0_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status1"]).push_back(RegData("Event_63_32_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status2"]).push_back(RegData("Event_95_64_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status3"]).push_back(RegData("Event_127_96_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status4"]).push_back(RegData("Event_159_128_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status5"]).push_back(RegData("Event_191_160_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status6"]).push_back(RegData("Event_223_192_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_event_status7"]).push_back(RegData("Event_255_224_Status", "31:0", 0, 4294967295));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_clear"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_a_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_clear"]).push_back(RegData("Clear", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_set"]).push_back(RegData("Set", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_block_north_in_b_value"]).push_back(RegData("Value", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_1st_level_disable_a"]).push_back(RegData("Disable_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_disable_b"]).push_back(RegData("Disable_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_enable_a"]).push_back(RegData("Enable_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_enable_b"]).push_back(RegData("Enable_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event1", "15:8", 8, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event2", "23:16", 16, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event3", "31:24", 24, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_a"]).push_back(RegData("IRQ_Event0", "7:0", 0, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event1", "15:8", 8, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event2", "23:16", 16, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event3", "31:24", 24, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_event_b"]).push_back(RegData("IRQ_Event0", "7:0", 0, 255));
   (regDataMap["shim_interrupt_controller_1st_level_irq_no_a"]).push_back(RegData("Irq_no_A", "3:0", 0, 15));
   (regDataMap["shim_interrupt_controller_1st_level_irq_no_b"]).push_back(RegData("Irq_no_B", "3:0", 0, 15));
   (regDataMap["shim_interrupt_controller_1st_level_mask_a"]).push_back(RegData("IRQ_Mask_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_mask_b"]).push_back(RegData("IRQ_Mask_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_status_a"]).push_back(RegData("Status_A", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_1st_level_status_b"]).push_back(RegData("Status_B", "19:0", 0, 1048575));
   (regDataMap["shim_interrupt_controller_2nd_level_disable"]).push_back(RegData("Disable_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_disable"]).push_back(RegData("Disable_uC_Core", "16", 16, 1));
   (regDataMap["shim_interrupt_controller_2nd_level_enable"]).push_back(RegData("Enable_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_enable"]).push_back(RegData("Enable_uC_Core", "16", 16, 1));
   (regDataMap["shim_interrupt_controller_2nd_level_interrupt"]).push_back(RegData("NoC_Interrupt", "1:0", 0, 3));
   (regDataMap["shim_interrupt_controller_2nd_level_mask"]).push_back(RegData("IRQ_Mask_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_mask"]).push_back(RegData("IRQ_Mask_uC_Core", "16", 16, 1));
   (regDataMap["shim_interrupt_controller_2nd_level_status"]).push_back(RegData("Status_A", "15:0", 0, 65535));
   (regDataMap["shim_interrupt_controller_2nd_level_status"]).push_back(RegData("Status_uC_Core", "16", 16, 1));
   (regDataMap["shim_interrupt_controller_hw_error_interrupt"]).push_back(RegData("NoC_Interrupt", "1:0", 0, 3));
   (regDataMap["shim_interrupt_controller_hw_error_mask"]).push_back(RegData("Hw_Uncorrectable_Errors", "0", 0, 1));
   (regDataMap["shim_interrupt_controller_hw_error_mask"]).push_back(RegData("Hw_Correctable_Errors", "1", 1, 1));
   (regDataMap["shim_interrupt_controller_hw_error_mask"]).push_back(RegData("AXI_Errors", "2", 2, 1));
   (regDataMap["shim_interrupt_controller_hw_error_status"]).push_back(RegData("Hw_Uncorrectable_Errors", "0", 0, 1));
   (regDataMap["shim_interrupt_controller_hw_error_status"]).push_back(RegData("Hw_Correctable_Errors", "1", 1, 1));
   (regDataMap["shim_interrupt_controller_hw_error_status"]).push_back(RegData("AXI_Errors", "2", 2, 1));
   (regDataMap["shim_lock0_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock10_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock11_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock12_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock13_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock14_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock15_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock1_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock2_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock3_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock4_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock5_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock6_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock7_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock8_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock9_value"]).push_back(RegData("Lock_value", "5:0", 0, 63));
   (regDataMap["shim_lock_request"]).push_back(RegData("Request_Result", "0", 0, 1));
   (regDataMap["shim_locks_event_selection_0"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_0"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_1"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_1"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_2"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_2"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_3"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_3"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_4"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_4"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_event_selection_5"]).push_back(RegData("Lock_Select", "19:16", 16, 15));
   (regDataMap["shim_locks_event_selection_5"]).push_back(RegData("Lock_Value", "5:0", 0, 63));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_0", "0", 0, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_1", "1", 1, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_10", "10", 10, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_11", "11", 11, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_12", "12", 12, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_13", "13", 13, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_14", "14", 14, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_15", "15", 15, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_2", "2", 2, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_3", "3", 3, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_4", "4", 4, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_5", "5", 5, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_6", "6", 6, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_7", "7", 7, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_8", "8", 8, 1));
   (regDataMap["shim_locks_overflow"]).push_back(RegData("Lock_Overflow_9", "9", 9, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_0", "0", 0, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_1", "1", 1, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_10", "10", 10, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_11", "11", 11, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_12", "12", 12, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_13", "13", 13, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_14", "14", 14, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_15", "15", 15, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_2", "2", 2, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_3", "3", 3, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_4", "4", 4, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_5", "5", 5, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_6", "6", 6, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_7", "7", 7, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_8", "8", 8, 1));
   (regDataMap["shim_locks_underflow"]).push_back(RegData("Lock_Underflow_9", "9", 9, 1));
   (regDataMap["shim_mdm_dbg_ctrl_status"]).push_back(RegData("Bit_Size_0_Access_Lock", "0", 0, 1));
   (regDataMap["shim_mdm_dbg_ctrl_status"]).push_back(RegData("MDM_Command", "16:9", 9, 255));
   (regDataMap["shim_mdm_dbg_ctrl_status"]).push_back(RegData("Access_MDM", "17", 17, 1));
   (regDataMap["shim_mdm_dbg_ctrl_status"]).push_back(RegData("Access_Lock_Type", "19:18", 18, 3));
   (regDataMap["shim_mdm_dbg_ctrl_status"]).push_back(RegData("Bit_Size_8_1", "8:1", 1, 255));
   (regDataMap["shim_mdm_dbg_data"]).push_back(RegData("Debug_Data", "31:0", 0, 4294967295));
   (regDataMap["shim_mdm_dbg_lock"]).push_back(RegData("Debug_Lock", "15:0", 0, 65535));
   (regDataMap["shim_mdm_pccmdr"]).push_back(RegData("Reset", "0", 0, 1));
   (regDataMap["shim_mdm_pccmdr"]).push_back(RegData("Sample", "1", 1, 1));
   (regDataMap["shim_mdm_pccmdr"]).push_back(RegData("Stop", "2", 2, 1));
   (regDataMap["shim_mdm_pccmdr"]).push_back(RegData("Start", "3", 3, 1));
   (regDataMap["shim_mdm_pccmdr"]).push_back(RegData("Clear", "4", 4, 1));
   (regDataMap["shim_mdm_pcctrlr"]).push_back(RegData("Event", "7:0", 0, 255));
   (regDataMap["shim_mdm_pcdrr"]).push_back(RegData("PCDRR", "31:0", 0, 4294967295));
   (regDataMap["shim_mdm_pcsr"]).push_back(RegData("Full", "0", 0, 1));
   (regDataMap["shim_mdm_pcsr"]).push_back(RegData("Overflow", "1", 1, 1));
   (regDataMap["shim_mdm_pcwr"]).push_back(RegData("PCWR", "31:0", 0, 4294967295));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("SLVERR_Block", "2", 2, 1));
   (regDataMap["shim_me_aximm_config"]).push_back(RegData("DECERR_Block", "3", 3, 1));
   (regDataMap["shim_memory_dm_ecc_error_generation"]).push_back(RegData("Inhibit_Checkbit", "0", 0, 1));
   (regDataMap["shim_memory_dm_ecc_scrubbing_period"]).push_back(RegData("Scrubbing_Period_Log2_Cycles", "4:0", 0, 31));
   (regDataMap["shim_memory_privileged"]).push_back(RegData("Memory_Privileged", "0", 0, 1));
   (regDataMap["shim_memory_zeroization"]).push_back(RegData("PM_Zeroization", "0", 0, 1));
   (regDataMap["shim_memory_zeroization"]).push_back(RegData("Private_DM_Zeroization", "1", 1, 1));
   (regDataMap["shim_memory_zeroization"]).push_back(RegData("DM_Zeroization", "2", 2, 1));
   (regDataMap["shim_module_aximm_offset"]).push_back(RegData("AXIMM_Offset", "31:0", 0, 4294967295));
   (regDataMap["shim_module_axi_mm_outstanding_transactions"]).push_back(RegData("uC_DMA_To_NMU", "0", 0, 1));
   (regDataMap["shim_module_axi_mm_outstanding_transactions"]).push_back(RegData("uC_Module_To_Array", "1", 1, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("Stream_Switch_Clock_Enable", "0", 0, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("PL_Interface_Clock_Enable", "1", 1, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("uController_Clock_Enable", "2", 2, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("CTE_Clock_Enable", "3", 3, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("Ctrl_Pkt_Tlast_Error_Enable", "4", 4, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("NoC_Module_0_DMA_Adaptive_Clock_Gate", "5", 5, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("NoC_Module_1_DMA_Adaptive_Clock_Gate", "6", 6, 1));
   (regDataMap["shim_module_clock_control_0"]).push_back(RegData("uController_SRAMs_Sleep", "7", 7, 1));
   (regDataMap["shim_module_clock_control_1"]).push_back(RegData("NoC_Module_0_Clock_Enable", "0", 0, 1));
   (regDataMap["shim_module_clock_control_1"]).push_back(RegData("NoC_Module_1_Clock_Enable", "1", 1, 1));
   (regDataMap["shim_module_clock_control_1"]).push_back(RegData("Shim_DMA_SRAMs_Sleep", "2", 2, 1));
   (regDataMap["shim_module_reset_control_0"]).push_back(RegData("Stream_Switch_Reset", "0", 0, 1));
   (regDataMap["shim_module_reset_control_0"]).push_back(RegData("PL_Interface_Reset", "1", 1, 1));
   (regDataMap["shim_module_reset_control_0"]).push_back(RegData("uController_Reset", "2", 2, 1));
   (regDataMap["shim_module_reset_control_0"]).push_back(RegData("CTE_Module_Reset", "3", 3, 1));
   (regDataMap["shim_module_reset_control_1"]).push_back(RegData("NoC_Module_0_Reset", "0", 0, 1));
   (regDataMap["shim_module_reset_control_1"]).push_back(RegData("NoC_Module_1_Reset", "1", 1, 1));
   (regDataMap["shim_mux_config"]).push_back(RegData("South3", "11:10", 10, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South5", "13:12", 12, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South7", "15:14", 14, 3));
   (regDataMap["shim_mux_config"]).push_back(RegData("South1", "9:8", 8, 3));
   (regDataMap["shim_nmu_switches_config"]).push_back(RegData("NMU_0", "0", 0, 1));
   (regDataMap["shim_nmu_switches_config"]).push_back(RegData("NMU_1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South2", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South4", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South5", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_bypass"]).push_back(RegData("South6", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South7", "10", 10, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South6_South7_128_combine", "11", 11, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South0_South1_128_combine", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South2", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South3", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South2_South3_128_combine", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South4", "6", 6, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South5", "7", 7, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South4_South5_128_combine", "8", 8, 1));
   (regDataMap["shim_pl_interface_downsizer_config"]).push_back(RegData("South6", "9", 9, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South2", "2", 2, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South3", "3", 3, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South4", "4", 4, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South5", "5", 5, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South6", "6", 6, 1));
   (regDataMap["shim_pl_interface_downsizer_enable"]).push_back(RegData("South7", "7", 7, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South0", "0", 0, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South1", "1", 1, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South0_South1_128_combine", "2", 2, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South2", "3", 3, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South3", "4", 4, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South2_South3_128_combine", "5", 5, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South4", "6", 6, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South5", "7", 7, 1));
   (regDataMap["shim_pl_interface_upsizer_config"]).push_back(RegData("South4_South5_128_combine", "8", 8, 1));
   (regDataMap["shim_performance_counter0"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter0_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter1"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter1_event_value"]).push_back(RegData("Counter_Event_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter2"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter3"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter4"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_counter5"]).push_back(RegData("Counter0_Value", "31:0", 0, 4294967295));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt0_Stop_Event", "15:8", 8, 255));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt1_Start_Event", "23:16", 16, 255));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt1_Stop_Event", "31:24", 24, 255));
   (regDataMap["shim_performance_ctrl0"]).push_back(RegData("Cnt0_Start_Event", "7:0", 0, 255));
   (regDataMap["shim_performance_ctrl1"]).push_back(RegData("Cnt1_Reset_Event", "15:8", 8, 255));
   (regDataMap["shim_performance_ctrl1"]).push_back(RegData("Cnt0_Reset_Event", "7:0", 0, 255));
   (regDataMap["shim_performance_ctrl2"]).push_back(RegData("Cnt2_Stop_Event", "15:8", 8, 255));
   (regDataMap["shim_performance_ctrl2"]).push_back(RegData("Cnt3_Start_Event", "23:16", 16, 255));
   (regDataMap["shim_performance_ctrl2"]).push_back(RegData("Cnt3_Stop_Event", "31:24", 24, 255));
   (regDataMap["shim_performance_ctrl2"]).push_back(RegData("Cnt2_Start_Event", "7:0", 0, 255));
   (regDataMap["shim_performance_ctrl3"]).push_back(RegData("Cnt3_Reset_Event", "15:8", 8, 255));
   (regDataMap["shim_performance_ctrl3"]).push_back(RegData("Cnt2_Reset_Event", "7:0", 0, 255));
   (regDataMap["shim_performance_ctrl4"]).push_back(RegData("Cnt4_Stop_Event", "15:8", 8, 255));
   (regDataMap["shim_performance_ctrl4"]).push_back(RegData("Cnt5_Start_Event", "23:16", 16, 255));
   (regDataMap["shim_performance_ctrl4"]).push_back(RegData("Cnt5_Stop_Event", "31:24", 24, 255));
   (regDataMap["shim_performance_ctrl4"]).push_back(RegData("Cnt4_Start_Event", "7:0", 0, 255));
   (regDataMap["shim_performance_ctrl5"]).push_back(RegData("Cnt5_Reset_Event", "15:8", 8, 255));
   (regDataMap["shim_performance_ctrl5"]).push_back(RegData("Cnt4_Reset_Event", "7:0", 0, 255));
   (regDataMap["shim_smid"]).push_back(RegData("SMID", "9:0", 0, 1023));
   (regDataMap["shim_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["shim_spare_reg"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["shim_spare_reg_privileged"]).push_back(RegData("Spare_Reg", "15:0", 0, 65535));
   (regDataMap["shim_stream_switch_adaptive_clock_gate_abort_period"]).push_back(RegData("Abort_Period", "3:0", 0, 15));
   (regDataMap["shim_stream_switch_adaptive_clock_gate_status"]).push_back(RegData("Active", "0", 0, 1));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb0_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_ctrl"]).push_back(RegData("Enable", "0", 0, 1));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_0", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_1", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Packet_Count_1", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave0_1"]).push_back(RegData("Slave_ID_0", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_2", "13:8", 8, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_3", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Packet_Count_3", "29:24", 24, 63));
   (regDataMap["shim_stream_switch_deterministic_merge_arb1_slave2_3"]).push_back(RegData("Slave_ID_2", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_ID", "12:8", 8, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_1_Master_Slave", "13", 13, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_ID", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_2_Master_Slave", "21", 21, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_ID", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_3_Master_Slave", "29", 29, 1));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_ID", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_0"]).push_back(RegData("Port_0_Master_Slave", "5", 5, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_ID", "12:8", 8, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_5_Master_Slave", "13", 13, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_ID", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_6_Master_Slave", "21", 21, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_ID", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_7_Master_Slave", "29", 29, 1));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_ID", "4:0", 0, 31));
   (regDataMap["shim_stream_switch_event_port_selection_1"]).push_back(RegData("Port_4_Master_Slave", "5", 5, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_east3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_fifo0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_north5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south4"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_south5"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_tile_ctrl"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west0"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west1"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west2"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_west3"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_master_config_ucontroller"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_master_config_ucontroller"]).push_back(RegData("Master_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_master_config_ucontroller"]).push_back(RegData("Configuration", "6:0", 0, 127));
   (regDataMap["shim_stream_switch_master_config_ucontroller"]).push_back(RegData("Drop_Header", "7", 7, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_0_lower", "0", 0, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_1_lower", "1", 1, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("uController_lower", "10", 10, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_0_upper", "16", 16, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_1_upper", "17", 17, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_2_upper", "18", 18, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_3_upper", "19", 19, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_2_lower", "2", 2, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_4_upper", "20", 20, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_5_upper", "21", 21, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_6_upper", "22", 22, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_7_upper", "23", 23, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("Tile_Control_upper", "24", 24, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("Shim_trace_upper", "25", 25, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("uController_upper", "26", 26, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_3_lower", "3", 3, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_4_lower", "4", 4, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_5_lower", "5", 5, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_6_lower", "6", 6, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("South_7_lower", "7", 7, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("Tile_Control_lower", "8", 8, 1));
   (regDataMap["shim_stream_switch_parity_injection"]).push_back(RegData("Shim_trace_lower", "9", 9, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_0", "0", 0, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_1", "1", 1, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_2", "2", 2, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_3", "3", 3, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_4", "4", 4, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("South_5", "5", 5, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("Tile_Control", "6", 6, 1));
   (regDataMap["shim_stream_switch_parity_status"]).push_back(RegData("uController", "7", 7, 1));
   (regDataMap["shim_stream_switch_slave_config_east_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_east_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_east_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_east_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_east_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_fifo_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_fifo_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_north_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_north_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_4"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_4"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_5"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_5"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_6"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_6"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_south_7"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_south_7"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_tile_ctrl"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_trace"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_trace"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_0"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_0"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_1"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_1"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_2"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_2"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_west_3"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_west_3"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_config_ucontroller"]).push_back(RegData("Packet_Enable", "30", 30, 1));
   (regDataMap["shim_stream_switch_slave_config_ucontroller"]).push_back(RegData("Slave_Enable", "31", 31, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_east_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_fifo_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_north_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_4_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_5_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_6_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_south_7_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_tile_ctrl_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_trace_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_0_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_1_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_2_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_west_3_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot0"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot0"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot0"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot0"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot0"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot1"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot1"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot1"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot1"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot1"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot2"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot2"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot2"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot2"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot2"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot3"]).push_back(RegData("mask", "20:16", 16, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot3"]).push_back(RegData("id", "28:24", 24, 31));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot3"]).push_back(RegData("arbit", "2:0", 0, 7));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot3"]).push_back(RegData("msel", "5:4", 4, 3));
   (regDataMap["shim_stream_switch_slave_ucontroller_slot3"]).push_back(RegData("enable", "8", 8, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_South", "0", 0, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_North", "2", 2, 1));
   (regDataMap["shim_tile_control"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["shim_tile_control_axi_mm"]).push_back(RegData("Isolate_From_West", "1", 1, 1));
   (regDataMap["shim_tile_control_axi_mm"]).push_back(RegData("Isolate_From_East", "3", 3, 1));
   (regDataMap["shim_timer_control"]).push_back(RegData("Reset_Event", "15:8", 8, 255));
   (regDataMap["shim_timer_control"]).push_back(RegData("Reset", "31", 31, 1));
   (regDataMap["shim_timer_high"]).push_back(RegData("TimerHigh", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_low"]).push_back(RegData("TimerLow", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_trig_event_high_value"]).push_back(RegData("TimerTrigHigh", "31:0", 0, 4294967295));
   (regDataMap["shim_timer_trig_event_low_value"]).push_back(RegData("TimerTrigLow", "31:0", 0, 4294967295));
   (regDataMap["shim_trace_control0"]).push_back(RegData("Trace_Start_Event", "23:16", 16, 255));
   (regDataMap["shim_trace_control0"]).push_back(RegData("Trace_Stop_Event", "31:24", 24, 255));
   (regDataMap["shim_trace_control1"]).push_back(RegData("Packet_Type", "14:12", 12, 7));
   (regDataMap["shim_trace_control1"]).push_back(RegData("ID", "4:0", 0, 31));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event1", "15:8", 8, 255));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event2", "23:16", 16, 255));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event3", "31:24", 24, 255));
   (regDataMap["shim_trace_event0"]).push_back(RegData("Trace_Event0", "7:0", 0, 255));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event5", "15:8", 8, 255));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event6", "23:16", 16, 255));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event7", "31:24", 24, 255));
   (regDataMap["shim_trace_event1"]).push_back(RegData("Trace_Event4", "7:0", 0, 255));
   (regDataMap["shim_trace_status"]).push_back(RegData("Mode", "2:0", 0, 7));
   (regDataMap["shim_trace_status"]).push_back(RegData("State", "9:8", 8, 3));
   (regDataMap["shim_uc_core_interrupt_event"]).push_back(RegData("Event", "7:0", 0, 255));
}

} // namespace xdp
