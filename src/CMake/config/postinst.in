#!/bin/sh

mgmt_drv="xclmgmt"
mgmt_path="xclng/drm/xocl/mgmtpf"
flavor_name=""
if [[ $AWS_PEGASUS_TARGET == "1" ]]; then
    echo "AWS_PEGASUS_TARGET = 1"
    mgmt_drv="awsmgmt"
    mgmt_path="aws/kernel/mgmt"
    flavor_name="-aws"
fi

if [ -n "`dkms status -m xrt$flavor_name -v @XRT_VERSION_STRING@`" ]; then
    echo "Unloading old XRT Linux kernel modules"
    modprobe -r xocl
    modprobe -r $mgmt_drv

    echo "Unregistering old XRT Linux kernel module sources @XRT_VERSION_STRING@ from dkms"
    dkms remove -m xrt$flavor_name -v @XRT_VERSION_STRING@ --all
    find /lib/modules -type f -name xocl.ko -delete
    find /lib/modules -type f -name $mgmt_drv.ko -delete
    find /lib/modules -type f -name xocl.ko.kz -delete
    find /lib/modules -type f -name $mgmt_drv.ko.kz -delete
    depmod -A
fi

if [ -z "`dkms status -m xrt$flavor_name -v @XRT_VERSION_STRING@`" ]; then
    echo "Registering new XRT Linux kernel module sources @XRT_VERSION_STRING@ with dkms"
    dkms add -m xrt$flavor_name -v "@XRT_VERSION_STRING@"
fi

if [ -e /lib/modules/`uname -r`/build/include ]; then
    echo "Building XRT Linux kernel modules sources with dkms"
    dkms build -m xrt$flavor_name -v "@XRT_VERSION_STRING@"
    echo "Installing XRT Linux kernel modules sources with dkms"
    dkms install -m xrt$flavor_name -v "@XRT_VERSION_STRING@" --force
    install -m 644 /usr/src/xrt$flavor_name-@XRT_VERSION_STRING@/driver/xclng/drm/xocl/userpf/10-xocl.rules /etc/udev/rules.d
    install -m 644 /usr/src/xrt$flavor_name-@XRT_VERSION_STRING@/driver/$mgmt_path/10-$mgmt_drv.rules /etc/udev/rules.d

    echo "Loading new XRT Linux kernel modules"
    udevadm control --reload-rules
    modprobe $mgmt_drv
    modprobe xocl
    udevadm trigger
else
    echo "Build/Install of XRT Linux kernel modules skipped since Linux kernel headers are not installed"
fi

exit 0
