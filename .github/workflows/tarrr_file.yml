name: Test Docker
 

env:    
  RELEASE: '2021.1'    
  PIPELINE: 'xrt'   
  ENV: 'test'  
  
on:  
  push:  
    branches:  
      - '2021.1'  
  workflow_dispatch:  
    
jobs:  
  build:  
    strategy:        
      matrix:        
        include:        
          - os: centos8        
            packageType: rpm  
            os_ver: centos_8.1        
  
    runs-on: [self-hosted, Ubuntu-22.04]  
    steps:    
      - name: Set env variables      
        run: |      
          echo "Setting environment variables..."        
          echo "XRT_VERSION_PATCH=$(($GITHUB_RUN_NUMBER+717))" >> $GITHUB_ENV      
          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV       
      
      - name: Checkout PR     
        uses: actions/checkout@v3   
        with:   
          fetch-depth: 0  
          path: ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}    
          submodules: recursive     
  
      - name: Checkout private repository        
        uses: actions/checkout@v3     
        with:        
          repository: actions-int/composite-workflows  
          github-server-url: ${{ secrets.SERVER_URL }}        
          token: ${{ secrets.ACCESS_TOKEN }}        
          path: composite-workflows   
          ref: image 
         
      - name: XRT build       
        uses: ./composite-workflows/build  
        with:       
          pipeline: ${{ env.PIPELINE }}   
          osVersion: ${{ matrix.os }}    
          packageType: ${{ matrix.packageType }}  
          os_ver: ${{ matrix.os_ver }}    
          workspace: ${{ github.workspace }}  
          buildNumber: ${{ env.XRT_VERSION_PATCH }}       
          accessToken: ${{ secrets.ACCESS_TOKEN }}  
          github-server-url: ${{ secrets.SERVER_URL }}  
          appConfig: ${{ secrets.APP_CONFIG }}   
          appConfig1: ${{ secrets.APP_CONFIG1 }}   
          appConfig2: ${{ secrets.APP_CONFIG2 }}   
          appConfig3: ${{ secrets.APP_CONFIG3 }}   
  
  package-download:      
    needs: [build]      
    runs-on: [self-hosted, Ubuntu-22.04]      
    steps:  
      - name: Set env variables      
        run: |      
          echo "Setting environment variables..."        
          echo "XRT_VERSION_PATCH=$(($GITHUB_RUN_NUMBER+717))" >> $GITHUB_ENV      
          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV   
  
      - name: Checkout private repository      
        uses: actions/checkout@v3   
        with:      
          repository: actions-int/composite-workflows      
          token: ${{ secrets.ACCESS_TOKEN }}  
          github-server-url: ${{ secrets.SERVER_URL }}      
          path: composite-workflows   
          ref: '2021.1'  
  
      - name: Use composite action package download       
        uses: ./composite-workflows/package-download     
        with:      
          runNumber: ${{ env.XRT_VERSION_PATCH }}      
          pipeline: ${{ env.PIPELINE }}      
          env: ${{ env.ENV }}  
          release: ${{ env.RELEASE }}    
          sshKey: ${{ secrets.CI_PRIVATE_SSH_KEY }}      
          accessToken: ${{ secrets.ACCESS_TOKEN }}  
          NPATH: ${{ secrets.NPATH }}  
          USER: ${{ secrets.USER }}  
          github-server-url: ${{ secrets.SERVER_URL }}  
  
      - name: List contents of artifact directory  
        run: |  
          cd ${{ env.PATH_DIR }}/artifact  
          ls -al  
        shell: bash  
  
      - name: Find and copy xrt.rpm  
        run: |  
          cd ${{ env.PATH_DIR }}/artifact  
          cp *xrt.rpm ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}/Dockerfile/xrt.rpm || echo "RPM file not found"  
        shell: bash  
   
      - name: List contents after copying RPM  
        run: |  
          ls -al ${{ github.workspace }}  
        shell: bash  
  
      - name: List contents of Dockerfile directory  
        run: |  
          ls -al ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}/Dockerfile  
        shell: bash  
  
      - name: Build Docker image  
        run: |  
          docker build -t xrt_image:latest -f ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}/Dockerfile/Dockerfile ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}  
        shell: bash  
  
      - name: Authenticate with Harbor    
        run: |    
          echo "${{ secrets.HARBOR_PASSWORD }}" | docker login registry.amd.com -u '${{ secrets.HARBOR_USERNAME }}' --password-stdin    
        shell: bash    
     
      - name: Push Docker image to AMD Harbor    
        run: |    
          docker tag xrt_image:latest registry.amd.com/buildops/xrt_image:latest    
          docker push registry.amd.com/buildops/xrt_image:latest    
        shell: bash    
  
      - name: Deleting build files      
        if: always()  
        run: |  
          rm -rf ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}  
        shell: bash   


   


