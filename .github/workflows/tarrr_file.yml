name: Test Docker
  
env:  
  RELEASE: '2021.1'  
  PIPELINE: 'xrt'  
  ENV: 'test'  
  BUILD_NUMBER: '723'  # Set the build number here  
  
on:  
  workflow_dispatch:  
  
jobs:  
  build_docker_image:  
    runs-on: [self-hosted, Ubuntu-22.04]  
    steps:  
      - name: Set env variables  
        run: |  
          echo "Setting environment variables..."  
          echo "XRT_VERSION_PATCH=${{ env.BUILD_NUMBER }}" >> $GITHUB_ENV  
          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV  
  
      - name: Checkout PR  
        uses: actions/checkout@v3  
        with:  
          fetch-depth: 0  
          path: ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}  
          submodules: recursive  
  
      - name: List contents of Dockerfile directory  
        run: |  
          ls -al ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}/Dockerfile  
        shell: bash  
  
      - name: List contents of xrt_packages directory  
        run: |  
          ls -al ${{ github.workspace }}/../preflight-check/xrt_packages  
        shell: bash  
  
      - name: Verify file type  
        run: |  
          file ${{ github.workspace }}/../preflight-check/xrt_packages/xrt_202410.2.17.723_8.1.1911-x86_64-xrt.tar.gz  
        shell: bash  
  
      - name: Prepare build context  
        run: |  
          mkdir -p ${{ github.workspace }}/build_context/xrt_packages  
          cp ${{ github.workspace }}/../preflight-check/xrt_packages/xrt_202410.2.17.723_8.1.1911-x86_64-xrt.tar.gz ${{ github.workspace }}/build_context/xrt_packages/  
          cp ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}/Dockerfile/Dockerfile ${{ github.workspace }}/build_context/  
          cp ${{ github.workspace }}/${{ env.XRT_VERSION_PATCH }}/Dockerfile/auto_setup.sh ${{ github.workspace }}/build_context/  
  
      - name: List contents of build context  
        run: |  
          ls -al ${{ github.workspace }}/build_context  
          ls -al ${{ github.workspace }}/build_context/xrt_packages  
        shell: bash  
  
      - name: Build Docker image  
        run: |  
          docker build -t xrt_centos_8.1_image:latest --build-arg PACKAGE_PATH=/tmp/xilinx_packages -f ${{ github.workspace }}/build_context/Dockerfile ${{ github.workspace }}/build_context  
        shell: bash  
  
      - name: Push Docker image to AMD Harbor  
        run: |  
          docker tag xrt_centos_8.1_image:latest registry.amd.com/buildops/xrt_centos_8.1_image:latest  
          docker push registry.amd.com/buildops/xrt_centos_8.1_image:latest  
        shell: bash  
